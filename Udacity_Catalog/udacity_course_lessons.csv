0,"Lesson 1","Learn how to create new C# scripts in Unity.Learn how to attach scripts to GameObjects in Unity.Learn how to use the start and update functions and translate function to move objects"
0,"Lesson 2","Learn how to control Unity components using scripts.Learn how to create new objects using scripts.Learn how to use a for loop to create objects with scripts"
0,"Lesson 3","Learn how to create UI GameObjects and be able to place them in World Space.Learn how to use Unity’s Event System to click an object.Learn how to change scenes using code"
0,"Lesson 4","Learn how to use code to detect when the trigger is pulled.Learn how to create a simple rotation animation.Learn how to create a trigger system in the Animator"
0,"Lesson 5","Learn to to physics, colliders, and raycasting work in VR.Learn how to use Unity Audio and activate it within a script.Learn how to use array and random"
0,"Lesson 6","Learn how to see a waypoint system and understand how to use it.Learn how to see a flocking algorithm and understand how to control it.Learn how to see an ocean shader and understand how to control it"
1,"JSON Parsing","Discover the power of Web Apis and how they can be used in an Android App..Get practice reading API documentation and learn how to request data from an API using a web browser..Learn the essentials of JSON, a common HTTP Response format."
1,"HTTP Networking","Harness the essentials of the Hypertext Transfer Protocol to exchange data between an Android device and a web server..Learn about the components that are needed to compose an HTTP GET Request..Harness the HttpUrlConnection class to compose a request to the USGS API."
1,"Threads and Parallelism","Learn about how you can use threads to do time consuming work in the background while keeping an Android App's User Interface fast and responsive..Get a comprehensive overview of AsyncTask and Loaders, two important threading options exposed by the Android Framework..Discover how to persist user settings using Shared Preferences."
2,"Deploying a Hadoop cluster on Amazon EC2","Learn how to deploy a small Hadoop cluster on Amazon EC2 instances."
2,"Deploy a Hadoop cluster with Ambari","Use Apache Ambari to automatically deploy a larger, more powerful Hadoop cluster."
2,"On-demand Hadoop clusters","Use Amazon’s ElasticMapReduce to deploy a Hadoop cluster on-demand."
2,"Analyzing a big dataset with Hadoop and MapReduce","Use Hadoop and MapReduce to analyze a 150 GB dataset of Wikipedia page views."
3,"Ensuring App Quality with Continuous Integration","In this lesson, you’ll setup a continuous integration (CI) system with buddybuild so that you can test your apps like the pros. You'll learn how to configure a project with a simplified version of GitFlow, a commonly used Git branching structure well-suited for collaborative, professional projects. Also, you'll write unit and UI tests to verify the core functionality of an app."
3,"Continuous Deployment with One Seamless System","In this lesson, you'll continue to improve your development process by configuring a continuous deployment and delivery system using buddybuild. You'll learn how buddybuild quickly adds and provision devices on your behalf for testing so there is no delay in getting new builds in front of your users. Then, to complete the feedback loop, you'll utilize the buddybuild SDK to consolidate issues and requests into a single location with rich visual descriptions and debugging information."
4,"Creating Adaptive Layouts","In this lesson, you’ll learn how to take static interfaces and make them adaptive — so they can be displayed on any iPhone, iPad, or adaptation modes used for multi-tasking. You'll also learn the core mechanism for adaptivity, trail collections, and use them to layout your views. By the end of this lesson, you'll know how to create adaptive fonts, respond the text direction of a user's language, and even completely swap interfaces based on device orientation."
5,"VIPER Architecture","In this lesson, you’ll learn about increasingly popular VIPER architecture. VIPER is a structural design pattern that can be used as a replacement for the Model View Controller (MVC) pattern. VIPER addresses one of the most common problem with MVC, massive view controllers, by splitting up typical MVC responsibilities into more concise and coherent classes."
6,"What is VR?","Learn the basic history of VR development.Learn the physical principles of VR including display, optics and orientation tracking.Understand how comfort & presence play a role in VR development"
6,"Platforms & Paradigms","Learn the difference between native, game engines, and web platforms.Learn how tracking in VR works.Learn about the different platforms currently available for VR development"
6,"Hello World","Learn about to install and open a project in the Unity platform.Learn how to view, inspect, and gain a basic understanding of the Unity platform interface.Install and open an app in Google cardboard"
7,"Game Object","Create game objects in Unity that represent primitives and meshes.Establish parent and child relationships between game objects"
7,"Material","Learn how to assign a textures & material.Be able to identify the purpose of shaders and how to use them.Be able to identify the basic inputs to Unity’s Physically-Based Rendering system and use them"
7,"Animation","Learn how to keyframe and a script to trigger an animation.Learn how to adjust the speed of an animation with curves and the timeline.Learn how to differentiate an animation clip from an animation controller"
7,"Cameras","Be able to inspect the camera component and its properties.Create a simple VR camera and understand how stereo rendering is implemented.Learn how to implement Google’s VR Camera and understand the advantages of Google’s SDK compared to simple VR camera"
7,"Lights","Learn how to add a light gameobject to a scene and understand the difference between different types of lights.Be able to correctly choose between real-time and baked lighting for scene.Learn how to implement baked lighting and optimize lightmaps for mobile VR"
8,"Lesson 1: Variables","In this lesson, you’ll learn about one of the most basic building blocks of nearly every programming language — variables. Variables give developers the ability to store information that can be used to control the behavior of an application. By the end of this lesson, you'll be able to create and store values using variables."
8,"Lesson 2: Strings","In this lesson, you’ll learn how to represent a sequence of characters, or in other words, a string! For iOS apps, you'll use strings for labels, buttons, and any text in a user interface, but you'll also need them for behind-the-scenes processing. By the end of this lesson, you'll be able to create and manipulate strings using their powerful built-in features."
8,"Lesson 3: If Statements","In this lesson, you’ll learn how to control when and how Swift code is executed by using if statements. You'll also learn about the counterpart to if statements called "else" statements. By the end of this lesson, you'll be able to specify conditions for when Swift code should be executed based on logic that you define."
8,"Lesson 4: Functions","In this lesson, you’ll learn about functions — the construct which gives developers the ability to organize and reuse code. Understanding functions is a crucial step to becoming an iOS developer, and once you finish this lesson, you'll be able to create and use them in Swift."
11,"Introduction to Microservices","Learn how 12-factor apps and the microservices design pattern make modern applications easier to deploy and maintain."
11,"Building the Containers with Docker","Use Docker to build container images that package an application and its dependencies for deployment on a single machine."
11,"Kubernetes","The infrastructure to support an application at scale is as important as the application itself..See how Kubernetes allows you to focus on the big picture."
11,"Deploying Microservices","Go beyond the theoretical concepts and try out Kubernetes so that you can use it to manage real world apps."
12,"Progressive Web Apps","What is a Progressive Web App is and why you would want to make one?.Get started building out your very own app shell."
12,"Service Workers","Use Service Workers to enable your application to work offline..Identify which assets you should cache and how to use these cached assets in your application."
12,"Web App Manifest","Allow users to install your Progressive Web App to their device’s home screen..Properly configure a Web App Manifest."
13,"Overview","Learn why accessibility matters, and who it affects..Get a first look at the web accessibility guidelines (WAI – Web Accessibility Initiative)..Understand “POUR” means for accessibility, and locate checklists to help make your own sites accessible."
13,"Focus","Learn how to make a page usable for anyone navigating with the keyboard..An exploration of focusable elements..Learn how to manage focus in forms, in custom components, pop-ups, and off-screen content."
13,"Semantics Basics","Make a page work for people who are unable to use a standard user interface..Use a screen reader to try out ordinary form elements and add markup to make them work even better..Understand the accessibility tree the browser constructs from the DOM."
13,"Semantics Extras","Dive deeper into the screen-reader experience to add hyper-fast navigation..Learn how to arrange headings and label links so screen reader users can fly through your pages!.Call out “landmarks” into your page to speed up navigation even more."
13,"Semantics - ARIA","Move beyond the native elements of HTML into building custom controls and interactions..Accessible Rich Internet Applications (ARIA)..Learn how to add attributes to your custom interactions to make them as accessible as native elements."
13,"Style","Learn the third pillar of Accessibility (after Focus and Semantics): Styling..Highlight the focus, indicate ARIA states, zoomed in or out, and support limited color or contrast vision..Audit your page with the Chrome Accessibility Tools and correct any styling issues that pop up."
14,"Getting Started with the APIs","Practice loading the Google Maps JavaScript API and creating a map and styling it.. Show markers and infowindows, load and use various libraries, and create street view panoramas..Learn about the Static Maps and Street View imagery APIs."
14,"Understanding API Services","Learn when to use Web Services vs. Services within the JavaScript API..Get addresses from coordinates, calculate the distances, travel times, and directions between multiple locations..Learn to obtain the elevation or time zone of a point, and looking for places of interest around a location."
14,"Using the APIs in Practice","Learn about monitoring your projects API usage, and securing your identifiers..Familiarize with some terms of use and other important details..Check out where to go with questions, how to find information in our documentation."
15,"Introduction and Efficiency","Introduction to the course, including an explanation of expected Python knowledge..Dive in with the definition of efficiency in a computer science context and the notation commonly used to describe efficiency..Practice describing efficiency from code snippets."
15,"List-Based Collections","Learn the formal definition of a list in computer science, and see definitions and examples of list-based data structures, arrays, linked lists, stacks, and queues..Examine the efficiency of common list methods, and practice using and manipulating these data structures."
15,"Searching and Sorting","Explore how to search and sort with list-based data structures, including binary search and bubble, merge, and quick sort..Examine the efficiency of each and learn how to use recursion in searching and sorting..See and write examples of these methods, as well as more sorting algorithms like insertion sort."
15,"Maps and Hashing","Understand the concepts of sets, maps (dictionaries), and hashing..Examine common problems and approaches to hashing, and practice with examples of hash tables and hash maps."
15,"Trees","Learn the concepts and terminology associated with tree data structures..Investigate common tree types, such as binary search trees, heaps, and self-balancing trees..See examples of tree traversal techniques, examine their efficiency, and practice manipulating trees."
15,"Graphs","Examine the concept of a graph and common terms, coded representations, properties, traversals, and paths..Practice manipulating graphs and determining the efficiency associated with graphs."
15,"Case Studies in Algorithms","Explore famous computer science problems..Shortest Path Problem, the Knapsack Problem, and the Traveling Salesman Problem..Learn about brute-force, greedy, and dynamic programming solutions to such problems."
15,"Technical Interviewing Techniques","Learn about the “algorithm” for answering common technical interviewing questions..See how to clarify and explain practice interview questions using the concepts taught in this course..Get tips for giving interviewers exactly what they’re looking for in an interview."
17,"Making an App Interactive","Harness the power of Java to create an interactive coffee ordering app!.Start by writing simple Java code statements that add interactivity to your app..Use a fundamental concept in programming, a variable, to keep track of all the coffee drinks ordered."
17,"Work with the Android Framework and Control Flow","Take a deeper dive into the Android Framework and build the Just Java coffee ordering app!.See in more detail how Android works behind the scenes and take your first steps towards learning Object Oriented Programming..Add the ability to add toppings to your coffee, and show a detailed order summary when the customer purchases a coffee."
18,"Intents and Activities","Introduce yourself to the Miwok language app and create multiple screens within the app..Build Activities and link them together using Intents and a learn new way of using buttons..Learn and practice how to structure apps with multiple screens for an intuitive user experience"
18,"Data, Loops, and Custom Classes","Begin to harness the real power of object-oriented programming by building your own custom class to store real-life data..Leverage the power of loops when displaying lots of data to a user..Store information in efficient data structures and learn how to efficiently display the data in a scrolling list."
18,"Images and Visual Polish","Gorgeous apps not only delight users, they captivate them to stay - follow us through easy steps to visually polish your app..Learn how to add images to your app and how to refine the layout and user interface..Learn and practice as we guide you through steps all developer utilize when scoping out a new feature."
18,"Audio and Libraries","Make use of the vast Android ecosystem as you learn to play audio in your app using an external library..Leverage the Android's activity lifecycle and audio to create interactive and audible user experiences..Continue to cement the foundations of Android that will help you to continue building dynamic apps."
18,"Navigation Patterns Using Fragments","In this optional lesson, you'll respond to a designer's feedback and re-build the layout of the Miwok app with a slick user interface..Through the process of refactoring an app's user interface, learn about a new navigation pattern that uses fragments and tabs."
19,"JSON Parsing","Discover the power of Web Apis and how they can be used in an Android App..Get practice reading API documentation and learn how to request data from an API using a web browser..Learn the essentials of JSON, a common HTTP Response format."
19,"HTTP Networking","Harness the essentials of the Hypertext Transfer Protocol to exchange data between an Android device and a web server..Learn about the components that are needed to compose an HTTP GET Request..Harness the HttpUrlConnection class to compose a request to the USGS API."
19,"Threads and Parallelism","Learn about how you can use threads to do time consuming work in the background while keeping an Android App's User Interface fast and responsive..Get a comprehensive overview of AsyncTask and Loaders, two important threading options exposed by the Android Framework..Discover how to persist user settings using Shared Preferences."
20,"Using SQLite","Learn how to store app data in an SQLite database - a widely used industry data structure..Efficiently structure your app data tables..Learn the basics of SQL and practice reading, modifying, and deleting data from a database."
20,"Adding SQLite to Your App","Hook up a database to your Android app..Setup a Contract class..Read and write information from the database and handle a Cursor object."
20,"Building a ContentProvider","Learn how basics of a ContentProvider and add one to your app..Learn to design URIs for your ContentProvider..Implement the required functions to use your ContentProvider."
20,"Using a CursorAdapter and CursorLoader","Learn how automatically load data using a CursorAdapter and CursorLoader into a scrollable list..Allow users to select and edit information they've saved off..Polish the menus and layouts in your app."
21,"The Analytical Problem Solving Framework","Learn a framework for structured problem solving..Get introduced to predictive analysis..See examples of a variety of business problems."
21,"Selecting an Analytical Methodology","Learn to select the correct analytical methodology..Get introduced to the Methodogy Map..Learn to recognize numeric vs. non-numeric outcomes."
21,"Linear Regression","Apply the Problem Solving Framework to a business problem..Learn how to use simple linear regression models..Use categorical variables in linear regression."
22,"Understanding Data","Learn to identify structured, unstructured, and semistructured data..Get an introduction to the most common data types..Learn about the most common sources of data."
22,"Data Issues","Learn to clean dirty data..Learn to how to adjust for missing data..Be able to identify and correct outliers."
22,"Data Formatting","Learn about the importance of data format for analysis..Transpose, aggregate, and cross tabulate data..Learn how to use parse data."
22,"Data Blending","Learn how to merge data from multiple sources..Learn to use common data blending techniques..Explore fuzzy matching and spatial analysis"
23,"Introduction to Classification Modeling","Learn the key terminology used in predictive modeling..Learn the how to choose variables to use in a predictive model..Practice preparing a dataset for modeling."
23,"Binary Classification Models","Learn how to use models to predict data with two possible outcomes..Use logistic regression and decision tree models..Learn how to compare models and interpret results."
23,"Non-Binary Classification Models","Learn how to use models to predict categorical data with three or more possible outcomes..Learn how to use decision tree, forest, and boosted models..Compare models and interpret results."
25,"Creating Project Sunshine","Learn how to create and run a simple Android app.Create simple layouts for Android.Learn about the Android Studio IDE"
25,"Loading Data from the Internet","Connect to the Internet and communicate with web APIs.Learn about threading and how to make requests without slowing down your app.Learn how to add menus to your app"
25,"RecyclerView","Learn about the components that convert a list of data into visual UI elements"
25,"Intents","Learn the difference between Explicit and Implicit Intents.Learn how to navigate inside your apps using intents.Learn how to create Intents that apps outside your control can respond to"
25,"The Application Lifecycle","Understand the phases of the Android application lifecycle.Learn how to persist data between orientation and other changes"
25,"Preferences","Allow users to customize some aspects of your app.Consider when to omit or add a preference"
25,"Creating SQLite Databases","Implement a SQLite database.Make queries to and modify that database in your app"
25,"Introduction to Content Providers","Learn how Content Providers provide an interface to share data.Consume data from an already existing ContentProvider"
25,"Building a Content Provider","Learn to build a Content Provider"
25,"Background Tasks","Coming soon!"
25,"Completing the UI","Coming soon!"
25,"Polishing the UI","Coming soon!"
26,"Creating Project Sunshine","Learn how to create and run a simple Android app.Create simple layouts for Android.Learn about the Android Studio IDE"
26,"Loading Data from the Internet","Connect to the Internet and communicate with web APIs.Learn about threading and how to make requests without slowing down your app.Learn how to add menus to your app"
26,"RecyclerView","Learn about the components that convert a list of data into visual UI elements"
26,"Intents","Learn the difference between Explicit and Implicit Intents.Learn how to navigate inside your apps using intents.Learn how to create Intents that apps outside your control can respond to"
26,"The Application Lifecycle","Understand the phases of the Android application lifecycle.Learn how to persist data between orientation and other changes"
26,"Preferences","Allow users to customize some aspects of your app.Consider when to omit or add a preference"
26,"Creating SQLite Databases","Implement a SQLite database.Make queries to and modify that database in your app"
26,"Introduction to Content Providers","Learn how Content Providers provide an interface to share data.Consume data from an already existing ContentProvider"
26,"Building a Content Provider","Learn to build a Content Provider"
26,"Background Tasks","Coming soon!"
26,"Completing the UI","Coming soon!"
26,"Polishing the UI","Coming soon!"
27,"How to Assess Product Quality","Overview of product quality standards, and an introduction to the goals and structure of this course."
27,"Integration Points and Error Cases","Learn how to make apps work while offline..Validating user input..Learn how to deal with error cases."
27,"Accessibility and localization.","How to make your application accessible (a11y)..Using localization (l10n) in your application ..Supporting left to right (LTR) languages."
27,"How to Use External Libraries.","How to integrate third-party libraries in your Android app..Use libraries to handle images..Allow users to personalize their Sunshine experience with custom icons."
27,"Google Cloud Messaging.","Learn how to Implement a message receiver..Learn how to send messages to your app using the Google Cloud Messaging interface."
27,"Material Design","Understand how to use color in Material Design ..How to use Recyclerview..Apply material design principles to Sunshine's activity transitions, keylines and layouts."
27,"Building a Total Experience","Build and implement resizable widgets and immersive wallpaper images..Working with Muzei."
27,"Performance","Learn how to avoid overdraw..Use profiling tools in Android Studio to identify performance leaks."
28,"Gradle Fundamentals","Understand Gradle's capabilities and role in Java and Android builds..Learn the Gradle task model, and put together your first build!.Explore the Gardle build lifecycle."
28,"Gradle for Java","Understand the Gradle plugin system, and explore the Java plugin..Build and test Java projects..Learn to use Gradle for Dependency management."
28,"Gradle for Android","Use Gradle in Android Studio..Explore the features of the Gradle Android plugin and build process..Build an Android app with free and paid product flavors."
28,"Advanced Android Builds","Create Android libraries and apps that depend on them..Use advanced features of the Android Gradle Plugin to configure signing, obfuscation, and optimization..Configure Android testing."
28,"Final Project","Build and test a joke telling app with a free ad-supported version and a paid version..As a bonus, deploy a Google Cloud Messaging backend to supply the jokes."
29,"Introduction","Overview of Google Play services and an introduction to the goals and structure of this series."
29,"Getting Started","Learn about Location Services and Fused Location Provider..Create an app to get the current location."
29,"Going Deeper","Learn about continuous updates to your app..Extend this to understand different user activities."
29,"Advanced Topics: Geofencing","Learn about geofencing, how it works, and how to build and monitor them."
30,"Introduction","Overview of Google Play services and an introduction to the goals and structure of this series."
30,"Getting Started with Analytics","Get a Google Analytics account ID, and update your app to track all screen views."
30,"Beyond Auto Activity Tracking","Send tracking data for events, and track how your users move through the shopping process."
30,"Intro to Tag Manager","Use Tag Manager to update values in an app without having to redeploy any code."
30,"Integrating Google Analytics and Tag Manager","Use Tag Manager to organize the Analytics tags in your app."
31,"Introduction","Overview of Google Play services and an introduction to the goals and structure of this series."
31,"Learn AdMob","Introduction to models to make money from an app and Google AdMob..Create code to display Banner and Interstitial ads in an app..How to go from a test app to an app that shows real ads."
32,"Getting Started","Add maps to your app and understand the different map types..Learn how to use the Google Developers console to get an API key..Create a map that flies around the world!"
32,"Going Deeper","Understand the Camera, and how it's used to project a map.. Learn about zooming to different locations, and changing the camera tilt and direction..Learn about Markers, and how to place them on a map, as well as drawing shapes like lines, polylines and circles."
32,"Advanced Topics: Street View","Learn about StreetView and how to look at various locations around the globe as if you were there..Build a virtual hike down the Grand Canyon, and learn how to modify this to make it perfect for your app."
33,"Welcome","Discover why performance is so critical to the success of your Android App..Learn how to profile your code..Employ a few best practices to help resolve common issues in the areas of rendering, memory, compute, and battery."
33,"Render","How to identify and diagnose the key performance problems that come with drawing to the screen."
33,"Compute and Memory","Discover the tools in android studio that will help you detect and resolve memory leaks and memory churn..Use systrace to evaluate and improve the performance of functions."
33,"Battery","Discover tools provided with Android Studio that'll help you minimize the battery use of your App..Learn about classes in the Android Framework that will help your app minimize its impact on a device's battery usage."
34,"Android Design Fundamentals","Understand and apply the fundamentals of Android design to your app..Understand app structures, common navigation patterns and themes."
34,"Surfaces","Understand how to use surfaces to structure the hierarchy in an app..Learn how use surfaces to control interaction of elements in an app."
34,"Bold Graphic Design","Learn how to effectively use imagery and fonts..Learn how to effectively use color..Learn how to apply themes and styles."
34,"Meaningful Motion.","How to properly time an animation..Transition between application states..Learn how to create orderly animations."
34,"Adaptive Design.","Learn how to implement your designs on many screen sizes..Learn what considerations to make when adapting a design."
35,"Introduction","Overview of the course structure and goals.Introduction to the sample app."
35,"Wearables","Notification sync.Watch app.Watch face"
36,"Introduction","Overview of the course structure and goals.Introduction to the sample app."
36,"Living Room","Google Cast for ChromeCast and TV.Going deeper with Android TV.Gaming with Android TV"
37,"Introduction","Overview of the course structure and goals.Introduction to the sample app."
37,"Auto","Messaging app.Media app.Extend and test your apps for Auto."
38,"Getting started with Firebase","Adding Firebase to your app..Reading and writing data..Why choose Firebase."
38,"Advanced Reading and Writing with Firebase","Debugging..Leveraging FirebaseUI..Best practices for reading and writing data."
38,"Authentication","Authenticate with custom email and password or with Google..How to store user data..Login security and password resets."
38,"Effective Database Design","Sorting and basic filtering..Many to many relationships and de-normalizing data."
38,"Offline Access and Firebase Security","Offline access..Securing your data..Data validation."
39,"Set Your Goals","Write your mission and vision statements.Set your milestones.Decide on the steps you plan to take to reach these goals."
39,"Define the Skills You Need","Prepare to start building your team by analyzing your goals.Evaluate your needs, and identify your skill gaps."
39,"Build Your Team","Find co-founders and mentors.Get started with freelancers and employees"
39,"Get Capital for Your Business","Bootstrapping, Angel Investors, Venture Capitalists.Think about incubators, and accelerators as options for financing your business."
39,"Create Your Pitch Deck","Build your story.Prepare a pitch deck you can use to gain customers or secure investment."
40,"Ideation & Validation","Develop, validate and refine your ideas to build for a product/market fit..Case studies and interviews with founders, product experts, and investors..Learn how to efficiently conduct user research and build an entrepreneurial mindset."
40,"UI/UX","Go beyond visual style to understand material design, building for accessibility, user flows and personas..Learn about how startups make design decisions and learn from senior designers at Google..Analyze the user experience of another product and start documenting a user flow for your own product."
40,"Design Sprint","Created by Google Ventures, the Design Sprint Process is widely used by teams seeking to design, prototype, and test their ideas with customers..Google’s leading Design Sprint Master will help you go through all the steps required to validate your ideas and build mockups of your product..Get a first-hand look at how design sprints happen at Udacity and how you can design & conduct your own."
40,"Key Metrics","Learn to identify common metrics for websites and apps relating to traffic, customer satisfaction, and engagement..Learn tools that can be used to monitor metrics and examples from startups on what metrics not to measure..Identify actionable metrics that will work best for your own product."
41,"Introducing Monetization","A monetization strategy is comparable to the product/market fit for a new idea..Start thinking about profitability from the beginning..Learn about monetization models, profit margins, KPIs, and customer acquisition and retention."
41,"Monetization Strategies","Monetization strategies for freemium, subscription, eCommerce, and Ads across web, games, and native apps..Learn about the tools startups use to implement these strategies and design a plan to execute a model for your own product."
41,"Implement a Monetization Plan","Choose and tailor a monetization strategy for your product and learn how to set up tracking to monitor its effectiveness..Use Google Analytics and other tracking tools to get behavior reports, crashes, exceptions, and app speed."
41,"Optimize Your Model","Learn how to react and re-engage users if your monetization strategies don’t originally work..See how product and monetization are closely tied and how the Hooked Model can be used to optimize your strategy."
42,"Low-Fidelity Prototypes & User Research","Learn the fundamentals of prototyping..How to make paper prototypes and present them to users."
42,"Medium-Fidelity Prototypes with inVision","Learn how to incorporate feedback..Make interactive prototypes using InVision..How to conduct further user research remotely."
42,"Lifelong Prototyping","Learn how to refine your prototypes further..How to involve prototyping and user research in new app features..How to present your prototypes and research."
43,"Understand the User","Learn to define and create a targeted marketing plan for specific user segments..Analyze your competitive advantages and disadvantages through market segmentation and learn how to position your product..Conduct competitive analysis in order to create your unique value proposition."
43,"Pre-launch","Create marketing goals in order to focus your marketing plan..Start thinking about your distribution plan and consider what keywords work best for your goals..Learn about the beta-testing community, and prepare your landing pages."
43,"Launch!","Prepare, launch, execute, and gain your first users..Outline a go-to-market strategy and gain the know-how to execute on it..Learn SEO (search engine optimization) skills to get your first 1000 users."
43,"Customer Acquisition","Learn about paid and free customer acquisition methods from AdWords..An introduction to social marketing, email marketing and more."
43,"Measurement Fundamentals","Learn to use data to iterate and optimize your marketing plan."
44,"Intro to Cross Platform Game Development","LibGDX allows you write a game and deploy it to Android and iOS devices, desktop computers and browsers..Explore the functionality that the LibGDX game framework provides."
44,"Intro to LibGDX","Import and your first LibGDX project..Run it on your computer and Android device..Learn the basic structure of a LibGDX game."
44,"Drawing","Use the LibGDX ShapeRenderer object to draw some simple shapes (and some not-so-simple fractals)."
44,"Cameras and Viewports","Use a camera to focus the player's field of view on a portion of a larger game world..Learn to use viewports to simplify camera management."
44,"Movement","Create simple animations and physics effects by updating the game world over time..Learn to break up a complex game into separate screens."
44,"User Input","Handle key presses, touches, and accelerometer input."
44,"Growing Icicles","Create the core of Icicles, including player controls."
44,"Polishing Icicles","Add scoring, a head-up display, and a difficulty select screen."
45,"Sprites and Animations","Learn to draw using predefined sprites, animations and stretchable nine-patches..Learn to pack many sprites into a texture atlas that can be efficiently loaded."
45,"The Player","Create GigaGal and give her the ability to move and jump..Add separate sprites for facing left, facing right, standing, and jumping..Add an animation for GigaGal's walk."
45,"The Platforms","Add the platforms to GigaGal and allow GigaGal to jump on them and fall off again."
45,"The Camera","Set up the camera to follow GigaGal around the level."
45,"The Enemies","Add GigaGal's evil robot adversaries."
45,"The Bullets","Let GigaGal fight back with her arm cannon and create awesome explosions."
45,"Level Loading","Add the ability to load level data created in an external tool."
45,"Adding the HUD and onscreen controls","Add a score display, lives counter, and on screen controls for mobile players."
46,"Engagement","Learn the best design strategies to build an addictive game..Designing game difficulty, and including competition and social networks to get players more involved..Inspiring engagement is critical for a game to produce revenue in the long-term."
46,"Monetization Models","Monetization strategies for both paid games and free-to-download “freemium” games..A comparison of both premium and freemium models..How to effectively implement ads and in-app purchases."
46,"Best Publishing Practices","Get useful player feedback, and how to test out versions of your game with A/B testing..Design strategies for choosing what will appear in the app store—like icons and screenshots..Get your game to stand out against the competition."
47,"HTTP’s Request Response Cycle","Learn about HTTP's request and response cycle..What makes up an HTTP requests and response?.What originates an HTTP request and how do they relate to one another?"
47,"HTTP/1","Find out how HTTP/1 is used in practice..Map the requests and response  types from lesson 1 into HTTP verbs and response codes & headers."
47,"HTTPS","How does HTTPS differ from HTTP?.TLS, cryptography, and Certificate Authorities..HTTP Mixed Content issues."
47,"HTTP/2","Learn how HTTP/2 improves on and extends HTTP/1..Look at optimizations for HTTP/1 that are now anti-patterns in HTTP/2."
47,"Security","Look at and resolve common security problems like CORS, CSRF, XSS, and more!"
48,"Building a Single Page Application","The history of Single Page Applications..How to make a Single Page Applications..Learn the components of the most common frameworks."
48,"Examine A Framework's Source.","Discover constructor functions..An introduction to Underscore's template function..Backbone events and routing."
48,"Angular","Build your first Angular application..Learn Angular's Views, Controllers, Directives, and more!.Routing in Angular using the UI-Router module."
48,"Ember","Build your first Ember application..App generation and scaffolding with Ember-CLI..Learn Ember's Templates, Services, Components, and more!"
49,"The Benefits of Offline First","The benefits of developing offline-first applications..Understanding Lie-Fi."
49,"Introducing the Service Worker","How to use Service Workers..Understanding the Service Worker Lifecycle..How to use Service Worker DevTools."
49,"IndexedDB and Caching","What is IndexedDB?.How to cache assets using IndexedDB?"
50,"Creating Promises","Promises syntax and scope..Simplifying common, useful methods with Promises..Basic error handling."
50,"Chaining Promises","Creating sequences of async work manually..Advanced error handling..Techniques for generating sequences of async work with array methods."
51,"Efficient Inputs Part 1","Introduction to the principles of useful forms with Ido Green..How to research HTML5 input types..How to build a datalist input."
51,"Efficient Inputs Part 2","Exercise best practices for implementing input labels and types with many sample inputs..How to validate user input with HTML5 attributes..How to validate user input using JavaScript and the Constraint Validation API."
51,"Fast Forms","Explore techniques for making forms faster and easier for users..Practice empathy for your users in order to simplify and expedite forms..Apply everything you've learned so far by designing and building an e-commerce checkout."
51,"Touch Support","Explore best practices for responding to and designing user interactions on mobile..Use touch events to build a mobile-ready touch slider..Introduction to the final project - an event planner app!"
52,"Introduction","Being pragmatic vs. idealistic when choosing tools..Identify the real value of the tool..Keep things modular and replaceable."
52," Productive Editing","Set up your editor..Install Sublime Text..Install Plugins."
52,"Powerful Builds","Getting started with Gulp..Install gulp plugins..Create gulp tasks."
52,"Expressive Live Editing","Why live edit?.Approaches for live editing..Testing with Browser Sync."
52,"How to Prevent Disasters","Code correction with linting..ESLint..Unit testing in Gulp."
52,"Awesome Optimizations","CSS concatenation..JS concatenation and minification..Sourcemaps."
53,"What's and Why's of APIs","Learn about the basics of APIs and why they are important..How to choose the appropriate technologies for implementing a modern web API."
53,"Accessing Published APIs","Explore published APIs from Foursquare and Google Maps..See how these companies implement their API endpoints..Now leverage some of this information for our own use!"
53,"Creating your own API Endpoints","Use Flask to build your own web server..Setup API endpoints that follow the constraints to qualify as a RESTful API."
53,"Securing your API","Learn about API security..How to add OAuth login and token-based authentication..Learn to Rate limit your API endpoints."
53,"Writing Developer-Friendly APIs","Learn some API best practices using real-world examples..Take on the final project!"
54,"Writing READMEs","Learn what documentation is and who it's for..Learn what parts make up a great README file..Use Markdown to write a README file quickly and easily."
55,"Introduction to DevOps","What is DevOps..Why DevOps is needed..CAMS (Culture, Automation, Measurement, Sharing) principles."
55,"Dev and Ops","The different perspectives of Dev and Ops.Different perspectives can cause conflict..How to solve the problems with different approach and some tools."
55,"Continuous Integration and Delivery","Tools that enable Continuous Integration and Delivery workflows.Measurement and the ways it helps IT and business.Tools that help with measurement"
56,"From Design to Code","Diligently employ a code/test/refine strategy..Precisely translate initial design documents into static web pages..Investigate the Document Object Model (DOM)."
56,"Your Own Framework","How to create and personalize your own multi-platform, responsive CSS framework..Publish your professional portfolio projects to the web."
56," Learning and Using Bootstrap","Investigate an existing professional CSS framework.Build a website using responsive design principles while maintaining code readability."
57,"Write your First Computer Program","Sergey Brin's advice on learning to program..Get started on your first Python program..How to create and use variables in Python."
57,"Write Programs to do Repeating Work","Introducing procedures..Sum procedure with a return statement..Equality comparisons and more."
57,"How to Manage Data","Nested lists..A list of strings..Aliasing and more."
57,"Responding to Queries","Data structures..Lookup..Building the Web Index and more."
57,"How Programs Run","Measuring speed..Spin loop..Index size vs. time and more."
57,"How to Have Infinite Power","Infinite power..Counter..Recursive definitions and more."
57,"Past, Present, and the Future of Computing","Past of computing..Slac and Big Data..Open Source and more."
58,"How to write Java syntax and create variables","Discover the basic idea behind programing..Write your first Java program..Use variables to store and retrieve information."
58,"Using Methods and Conditional Statements","Use if-else statements and switch-case statements..Write Java programs to tackle any decision making scenario."
58,"How to create functions","Create functions in Java..Declare methods with input arguments and return types..Call the functions you create."
58,"How to Create Loops","Use for and while loops to iterate over a block of code..Learn how to write nested loops..Use 2D arrays to store and retrieve information."
58,"IntelliJ and Debugging","Learn how to install and use the IntelliJ Integrated Development Environment (IDE)..Use the IDE to find and solve problems in code."
59,"From Ping to HTTP","Begin using command-line tools to explore the network..Ping to check hosts, and nc (netcat) for webservers..Learn about port numbers and the layering of HTTP on top of TCP."
59,"Names and Addresses","Learn about the Domain Name System (DNS)..Register your own domain name for your web server..Learn more about the binary representation of IP addresses."
59,"Addressing and Networks","Network blocks and interfaces..Network address translation (NAT).. IPv6."
59,"Protocol Layers","Use tcpdump to examine the packets that make up the requests and responses..Explore three protocols: ping, DNS, and HTTP..Learn more about how TCP sessions work."
59,"Big Networks","Learn more about bandwidth, latency, filtering, and other key properties."
60,"Up and Running","Introduction to the course..Learn about the tools available to JavaScript developers..Begin modifying web pages with a little bit of code."
60,"Data Types","How to use variables..How to use basic data structures like numbers and strings..How to build advanced data structures like objects, and arrays."
60,"Flow Control","How to write conditional statements..How to avoid repeating yourself with loops..How to make your code more modular with functions."
61,"Get Into the Shell","Learn about the terminal user interface..See how you can interact with a Linux server using shell commands."
61,"Shell Commands","Different kinds of shell commands that work with the terminal in different ways.Use the Linux manual (manpages) to expand your knowledge of shell commands."
61,"The Linux Filesystem","Working with files and directories is a big part of using the shell..Learn basic commands for interacting with the filesystem."
62,"Navigating a Commit History","Discover what makes Git a great version control system for programmers..Get practice using Git to view the history of an existing project.See all the saved versions, checkout a previous version, and compare two different versions."
62,"Creating and Modifying a Repository","Learn how to create a repository and save versions of your project.Learn about the staging area, committing your code, branching, and merging."
62,"Using GitHub to Collaborate","Get practice using GitHub to share your code and collaborate on multi-developer projects.Learn how to make and review a pull request on GitHub..Get practice by collaborating with other Udacity students to write a create-your-own-adventure story."
63,"Introduction","Get ready for Python!.Download and install Python on your computer."
63,"Using Functions","Use functions from the Python Standard Library to build two projects..Explore a scenario where using functions will not be a good solution..Explore a powerful new tool called classes."
63,"Using Classes","Practice object-oriented programming concepts like classes and instances..Build three cool projects with classes..Learn to use packages and modules like Twilio."
63,"Making Classes","How to create a class..How to instantiate an object..How to access class attributes and methods."
63,"Final Project","How to identify a problem statement and idea for a project..Identify step-by step directions to design a solution..Leverage step-by-step strategies to make your own project."
64,"Introduction to Swift and Xcode: the tools of iOS","Learn all the Swift you need to know in 5 min..Take a tour of Xcode, Apple's integrated development environment..Get to know the Model View Controller, or MVC, design pattern"
64,"iOS App Structure: AutoLayout and Buttons","Learn Storyboard and AutoLayout, the tools used to build user interfaces in iOS..Start developing the Pitch Perfect App and creating the UI..Use Autolayout constraints to control the placement of UIButtons and UILabels on the screen."
64,"Using ViewControllers to build an app with Multiple Views","The UIViewController class, View Controller Lifecycle, and Multiple Views..Learn how to react to touch events and change the user interface..Add a second screen to your app using a UINavigationController."
64,"How to record audio and use the Delegation Design Pattern.","Learn about the AVFoundation class, AVAudioRecorder..Setup audio recording in the Pitch Perfect App..Practice using the Delegation pattern and implement programmatic segues."
64,"Playback Sound and Add Sound Effects","Setup audio playback including rate, pitch, echo, and reverb..Use UIStackViews to create an elegant layout for your app's UIButtons..Use class extensions to add functionality to your app."
65,"Introduction to Programming Languages and Java","What is Programming and Java..Work with print and println..Building your first program."
65,"Introduction to Classes and Objects","Working with variables and different variable types..Arguments and return values, as well as method declarations..String methods, pitfall and shared objects."
65,"Graphics","Drawing pictures and rectangles..Draw a crate..Intro into color."
65,"Fundamental Data Types","Working with numbers and arithmetic operations..Math functions, Sunset Effect, reading input and formatting output..Calculating circular fields."
65,"Decisions","The if statement.Relational operators, using booleans.Several practices ."
65,"Iterations","Loops and the infinitive loop..How to deal with Loop errors..Asymmetric bounds."
65,"Arrays, ArrayLists and Simple Array Algorithms","ArrayLists and how they work..Modifying an ArrayList..Separators."
66,"Data and Tables","Learn about how relational databases let you structure data into tables..Learn about the importance of unique keys and relationships between tables."
66,"Elements of SQL","Begin learning SQL, the Structured Query Language used by most relational databases..Learn about the select and insert statements, the basic operations for reading and writing data..Learn about the operators and syntax available to get the database to scan and join tables for you."
66,"Python DB-API","Learn how to access a relational database from Python code..Use a virtual machine (VM) to run a Python web application with a database..Common security pitfalls of database applications, including the famous Bobby Tables."
66,"Deeper Into SQL","Learn how to design and create new databases..Learn about normalized design, which makes it easier to write effective code using a database..Learn how to use the SQL join operators to rapidly connect data from different tables."
67,"Working with the CRUD","Learn about CRUD; Create, Read, Update, and Delete..Implement CRUD operations on a database..Use an ORM (Object-Relational Mapping) as an alternative to SQL."
67,"Making a Web Server","Build a web server from scratch using Python and some pre-installed libraries..Learn how GET and POST requests can retrieve and modify information on a web site..How to add CRUD functionality to our website."
67,"Developing with Frameworks","Introduction to web frameworks like Django and Ruby on Rails..Use the Flask web framework to develop our own web application..Introduction to APIs and how to add JSON endpoints to our application."
67,"Iterative Development","Build an entire web application on your own..Learn about the iterative development process..Have a working prototype throughout all stages of the development process."
68,"Authentication vs. Authorization","Learn the difference between authentication and authorization..Learn how OAuth 2.0 makes implementing security easier for developers and users..See OAuth 2.0 in action as you make API requests using Google's OAuth 2.0 Playground."
68,"Creating a Google+ Sign-In","Learn about the different types of security flows your application can implement..See how security can be handled by your server and your user's browser..Add a Google+ Sign-In to an existing web application and implement a hybridized client/server flow."
68,"Local Permission Systems","Add python code to create server-side rules that will constitute a permission system..Limit access of the database for each logged in user based on how the developer designs this code..Add a User model model to your database to store the credentials collected from the OAuth provider's API."
68,"Adding Facebook & Other Providers","Learn to implement multiple OAuth providers on your web application..Add Facebook Login as an alternative sign in option for your users..Understand how to use OAuth provider documentation to add as many providers as you see fit."
69,"Why Responsive","Introduction to responsive design with Pete LePage..Why does responsive design work for any device?.Remote debugging and emulation in the browser."
69,"Starting Small","What is the viewport?.Learn about sizing the content to the viewport..Touch targets, and why they should be large."
69,"Building Up","How to take advantage of CSS media queries..What is a breakpoint, and how to choose one..How to use the CSS flexbox to modify layout."
69,"Common Responsive Patterns","How to apply the mostly fluid pattern..How to apply the column drop pattern..How to apply layout shifter pattern."
69,"Optimizations","Using minor break points..How to optimize text layout..How to use responsive tables, and strategies for dealing with them."
70,"Getting up and Running","Start debugging on your mobile devices to work with responsive images with Sam Dutton..Get started with Developer Tools and mobile debugging."
70,"Units, Formats, Environments","Compare different kinds of images on the web and the units you can use to scale them..Set up your development environment so that responsive images are a part of your workflow..Apply responsive image principles in a real-world scenario!"
70,"Images with Markup","Dive into using markup techniques like CSS and icon fonts to create responsive graphics..Learn how to use markup techniques that are natively responsive and often extremely lightweight..Replace extraneous images with markup techniques add social media icons to the responsive blog project!"
70,"Full Responsiveness","Make your images fully responsive using the new <picture> element!.Learn to use the srcset and sizes attributes..Make the blog project fully responsive, by implementing <picture> to display beautiful images across a range of device widths and pixel ratios."
71,"The Critical Rendering Path","Introduction to the course with Paul Lewis..Learn how the browser turns HTML into pixels on the page.See how different CSS styles affect the rendering pipeline differently."
71,"App Lifecycles","How to recognize the four distinct phases in an app's lifecycle: Response, Animation, Idle and Load (RAIL)..How your frame budget changes depending on where the user is in RAIL..Practice thinking through app workloads at different stages in RAIL."
71,"Weapons of Jank Destruction","How to make sense of the Timeline panel in Chrome DevTools..Practice profiling a few different apps to find the source of jank."
71,"JavaScript","How to optimize JavaScript to hit 60fps during animations..How to move expensive JavaScript operations off the main thread and into Web Workers..How to debug a janky copy of a production quality app - the QR Snapper."
71,"Styles and Layout","Learn how accessing the wrong CSS properties can create loads of extra work for the browser..Learn how to debug multiple instances of Forced Synchronous Layout."
71,"Compositing and Painting","Practice profiling layer and paint performance with the paint profiler tool in the DevTools Timeline..Learn how to optimize layers to reduce the number of steps the browser needs to take to render each frame..Demonstrate everything you've learned about performance as you de-jankify the News Aggregator App!"
72,"Scalability Basics","How and why server racks were invented..Problems that you have to solve if you scale your app by yourself..Learn about a better way."
72,"Getting Started","Set up your first App Engine project and learn how to define Cloud Endpoints..Start the course project app - Conference Central and add authentication and user profiles."
72,"Storing and Retrieving Data","One of the most important things you want to do in your app is storing data..Learn about the Google App Engine Datastore and how you can use it in your applications..Add the ability to store and retrieve user profiles and conferences to the course project app."
72,"Advanced Datastore Concepts","Learn more about how Datastore works, including queries, filters, indexes and transactions..Add different ways to query conferences."
72,"Advanced App Engine Topics","Run application code in the background, without making the user wait, or even initiate the process..Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app..Memcache, Edge Caching, AppStats and other methods of optimising your apps performance."
73,"Changing Expectations","Build a project without an overall organizational paradigm..Explore the pain points of not using an organizational model..Introduction to future paradigms."
73,"Refactoring","New paradigms vs Lesson 1..Rebuild the project with the new organizational paradigm."
73,"Using an Organizational Library","Explore KnockoutJS to organize our code and to reduce the amount of boilerplate we write."
73,"Exploring Unfamiliar Code","Explore code that you didn't write, and use a library or framework that you aren't familiar with..Learn to explore code and foster one of the most important traits of a developer."
74,"Getting Started","Overview of the Backbone framework and its components."
74,"Building a Simple Backbone App","Build a simple Backbone application that dynamically calculates a shopping cart total."
74,"Hello Backbone","Review Backbone examples that get progressively more difficult..Get these examples up and running within your own environment..Then add functionality and experiment with them!"
74,"Diving Deeper with Backbone","Read through part of Addy Osmani’s book, Backbone Fundamentals..Gain a deeper understanding of how Backbone helps you create highly organize web applications."
74,"Building a Todo Application from Scratch","Develop a todo list application."
74,"Real-time Data with Firebase","Learn how to use Firebase for real-time, persistent, data storage."
75,"Rethinking Testing","Validating opinions..Identifying and defining expectations..Writing expectations in code."
75,"Writing Test Suites","JavaScript doesn't support testing natively - you need a framework..Introduction to the Jasmine testing framework..Use the red-green-refactor workflow to start an address book application."
76,"Intro to Linux","Introduction to the Linux operating system and its many distributions..Setup your very own Linux virtual machine on your own computer and explore it..Learn how the filesystem is organized and identify key files."
76,"Linux Security","Execute administrative tasks, update the software on your system, install new software, and manage users..Learn how to implement even stronger authentication mechanisms, and how to interpret Linux file permissions..Configure a firewall to keep your system secure."
76,"Web Application Servers","Transform your secure and safe barebones server into a fully functional web application server..Install and configure an Apache HTTP Server and PostgreSQL database server..Write a basic Python WSGI application that can query a database and present that data upon a web request."
77,"Lesson 1: What We Now Know","History of the Corporation. Startups Are Not Smaller Versions of Large Companies. Waterfall Development. Customer vs. Product Development. Entrepreneurial Education"
77,"Lessons 1.5A and 1.5B: Business Models and Customer Development","Value Proposition. Customer Segments. Revenue Streams. Key Resources. Customer Development Processes. Minimum Viable Product. Market Opportunity Analysis"
77,"Lesson 2: Value Proposition","Value Proposition and the Minimum Viable Product. Customer Archetype. MVP Physical && Web/Mobile. Common Mistakes With Value Proposition"
77,"Lesson 3: Customer Segments","Product Market Fit. Rank and Day in the Life. Multiple Customer Segments. Market Types Introduction: Existing, Resegmented, New, Clone. Consequences of Not Understanding a Market"
77,"Lesson 4: Channels","Distribution Channels Overview. Web Distribution. Physical Distribution. Direct Channel Fit. Indirect Channel Economics. OEM Channel Economics"
77,"Lesson 5: Customer Relationships","Paid Demand Creation. Earned Demand Creation. Get Physical. Viral Loop. Web Customer Acquisition Costs"
77,"Lesson 6: Revenue Models","How Do You Make Money. Revenue Streams and Price. Direct and Ancillary Models. Common Startup Mistakes. Market Types and Pricing. Single and Multiple Side Markets. Revenue First Companies. Market Size and Share"
77,"Lesson 7: Partners","Partner Definition. Partner Resources. Partner Types. Greatest Strategic Alliance. Joint Business Development"
77,"Lesson 8: Resources, Activities and Costs","Four Critical Resources. Financial Resources. Human Resources. Qualified Employees and Culture. Intellectual Property Overview"
78,"Swift Basics","An introduction to Swift types and operators..Develop deftness in defining variables and constants..Practice what you've learned with exercises in Swift playgrounds."
78,"Optional Types","Declare explicitly and implicitly unwrapped optionals..Unwrap optionals using both optional binding and optional chaining..Practice safely unwrapping optionals and learn to avoid errors."
78,"Swift Collections","Learn about the Swift Collection Types: Dictionaries, Arrays, and Sets..Perform basic operations including: append, count, insert, remove, update, find, and retrieve..Practice manipulating collections with exercises in Swift playgrounds."
78,"Control Flow: Loops, If statements, and Switches","Practice fast iteration with for-in loops by iterating through items in Arrays and Dictionaries..Create programming logic of increasing complexity with if-else statements..Delight in the convenience and conciseness of Swift switch statements."
78,"How to Write and Call Functions in Swift","Define and call functions..Correctly use local and external parameters..Identify parameter types and return types."
78,"Classes, Properties, and Methods","Practice building custom classes with their own properties and methods..Learn about type properties and computed properties..See example use cases for type methods and instance methods."
78,"Enums and Structs","Learn the difference between value types and references types..Practice choosing when to use enums, structs, and classes..Use enums to make your switch statements extra Swifty."
78,"Protocols and Extensions","Learn how protocols and extensions can help keep your code DRY..Given a series of code snippets, fix compiler errors by implementing protocols..Edit the code in a sample app to see extensions in action."
78,"Closure Expressions","Practice using Swift closures with the functions, sorted() and filter()..Learn shorthand closure expression syntax to make your closures super concise..See how closures are used in animations in the method, animateWithDuration."
79,"How to Use Outlets and Actions","Connect outlets and actions first using only code and a second time using storyboard..Use core UIKit classes like UIButton, UILabel and UISwitch..Practice debugging problems with IBOutlets and IBActions."
79,"Learn to Present Views and Segue Between Views","See how Apple distinguishes between modal presentation and navigation..Learn how to present views modally..Use powerful UIKit classes like UIImagePickerController, UIAlertController and UIActivityViewController."
79,"What is the Delegate Pattern and how do you use it?","Learn how delegates make important connections between the model, view, and controller..Implement UIKit components that make use of the delegate pattern, UITextField and UITextFieldDelegate..Demonstrate your understanding by building a series of challenge apps."
79,"Build V1.0 of the Meme Me App","Enable the user to choose an image using UIImagePickerController and UIImagePickerControllerDelegate..Adjust the keyboard so that it does not obscure UI elements..Generate a meme and share it using a UIActivityView."
79,"Build Tables using the UITableView class","Learn the essential UITableViewDelegate and UITableViewDatasource methods..Explore the code for several apps with tables, and then implement your own UITableView..Practice manipulating table cells."
79,"iOS App Navigation","Learn how iOS uses navigation stacks to manage multiple views in an app..Create the navigation that enables a user to tap a row of a table and view the details of an item..Learn navigation classes like UINavigationControll and UIBarButtonItem."
79,"Complete the Meme Me App","Take Meme Me to the next level with this final version of the app..Learn a simple way to share data across classes using the AppDelegate..Use UICollectionView to display the app's memes in a grid and UITabViewController to toggle between meme layouts."
80,"Making a Network Request","Learn the basics of the web and using web services..Experiment making requests and seeing their responses..Make a simple request to download an image using a URL."
80,"Using Web Services and APIs","Learn how to parse JSON data and display it to a user..Build your first app that utilizes a web service: “Sleeping in the Library.”.Learn how to use the Flickr API to download pictures from a gallery."
80,"Chaining Asynchronous Requests","Use closures to chain multiple web requests together..Demonstrate these new skills by building the “Flick Finder” app..Use the Flickr API to search for images based on a search string or location."
80,"Authenticating Requests","Learn the difference between user and anonymously accessed data..Build the “My Favorite Movies” app that utilizes the Movie Database API..Securely access data using HTTPS and tokens."
80,"Improving Networking with MVC","Improve on your “My Favorite Movies” app to build the “Movie Manager” app..Use good MVC design, and learn what this means from a networking perspective..Reduce code duplication and refactor code for more simple network requests."
80,"Preparing for "On the Map"","Start on your final project app, “On the Map.”.Learn about network reliability..How your app should behave if a network cannot be reached."
82,"Simple Persistence","Learn about simple persistence and how to save small pieces of data..How to set user preferences, using NSUserDefaults..Practice setting simple preferences to an existing app."
82,"The iOS File System","Learn about the iOS File System, the “sandbox”..See how to access these files using NSFileManager..Use the file manager to save and read a file."
82,"Core Data (Part 1)","Get introduced to the Core Data framework, Apple’s favorite framework for the model class..Learn about the Core Data stack and how to create a model and managed model objects..Begin work on a note-taking app."
82,"Core Data (Part 2)","Learn how tableviews adjust their display..How to save and persist changes..The important role Core Data plays in memory management."
82,"Important Extras","Important aspects of maintaining a persistent app..Learn how to save images using Core Data..Create a new version of a data model."
82,"Core Data & Concurrency","Send lengthy tasks to a background queue..Learn how Core Data tasks can run in different queues in a safe and efficient way..Use parent and child contexts to propagate saves without blocking the user interface."
83,"Objective-C and Swift, Compare and Contrast","Learn the distinguishing language features of Objective-C..Compare and contrast Objective-C and Swift language features..Practice answering interview questions about language features."
83,"Writing Classes","Familiarize yourself with Objective-C syntax..Write some classes and properties from scratch..Build a simple Objective-C program with classes."
83,"Adding Functionality to a Class: Methods and Messages","Master how to write and call methods in Objective-C..Learn basic control flow syntax..Build a functioning rock, paper, scissors game."
83,"Migrate an App from Objective-C to Swift: Part I","Learn how to write custom classes..Incorporate third party frameworks and extensions..Begin porting an existing Objective-C project into Swift."
83,"Migrate an App from Objective-C to Swift: Part II","Persist data with NSCoder and NSKeyedArchiver..Implement navigation with a collection view..Finish porting an existing Objective-C project into Swift."
83,"Common Interoperability Challenges","Facilitate communication between the languages of iOS..Add functionality to a mixed language project..Complete a set of coding challenges to sharpen interop skills."
84,"Debugging, Printing, Logging","Learn about the difference between warnings and errors in Xcode..Look at an example app riddled with bugs to troubleshoot..Outline a debugging process and use print statements to identify bugs."
84,"Stepping Through Code","Learn how to use breakpoints in Xcode..Examine application state and stack frames during the execution of an application..Diagnose and understand run-time problems using Xcode's debugging tools."
84,"LLDB and Breakpoint Actions","Learn about LLDB (low-level debugger)—the debugging super tool..Use LLDB commands to investigate issues in code..Add actions to breakpoints to improve your debugging workflow."
84,"Breakpoints and Visual Tools","Set special exception and symbolic breakpoints..Use Xcode's visual debugging tools to fix user interface problems..Practice debugging and fixing issues in an existing application."
85,"Research App Ideas","Brainstorm and vet multiple app ideas..Begin to think about the UI elements used in each and get user feedback on the designs..Start thinking about relevant web APIs and libraries to use."
85,"Build Your App","Choose an idea to pursue and build it!.Share tips for getting started and dealing with code that doesn't work..How to submit to the App Store."
85,"Reflect on the App Development Process","What went well, and what was your biggest challenge?.Becoming a better developer; what would you do differently next time?.Tips on monitoring App Store feedback"
86,"Overview of A/B Testing","This lesson will cover what A/B testing is and what it can be used for..How to construct a binomial confidence interval for the results..How to decide whether the change is worth the launch cost."
86,"Policy and Ethics for Experiments","How to make sure the participants of your experiments are adequately protected..What questions you should be asking regarding the ethicality of experiments..The four main ethics principles to consider when designing experiments."
86,"Choosing and Characterizing Metrics","Learn techniques for brainstorming metrics..What to do when you can't measure directly..Characteristics to consider when validating metrics."
86,"Designing an Experiment","How to choose which users will be in your experiment and control group..When to limit your experiment to a subset of your entire user base..Design decisions affect the size of your experiment."
86,"Analyzing Results","How to analyze the results of your experiments..Run sanity checks to catch problems with the experiment set-up..Check conclusions with multiple methods, including a binomial sign test."
88,"Visualization Fundamentals","Learn about the elements of great data visualization..Meet data visualization experts, learn about data visualization in the context of data science..Learn how to represent data values in visual form."
88,"Building Blocks","Learn how to use the open standards of the web to create graphical elements..Select elements on the page, add SVG elements, and how to style SVG elements..Instructor Notes throughout this lesson are available if you have little or no experience with HTML and CSS."
88,"Design Principles","Which chart type to use for a data set..Colors to avoid when making graphics..How to determine if a graphic is effective."
88,"Dimple js","Create graphics using the Dimple JavaScript library..Learn about this library as a gentle coding introduction before learning about D3.js..Produce great graphics with minimal code and interactivity without any extra effort."
88,"Narratives","Learn how to incorporate different narrative structures into your visualizations..Learn about bias in the data visualization process and learn how to add context."
88,"Animation and Interaction","Learn how to leverage animation and interaction to bring more data insights to your audience..Learn how to create a bubble map for the World Cup data set."
89,"Welcome to Machine Learning","Learn what Machine Learning is and meet Sebastian Thrun!.Find out where Machine Learning is applied in Technology and Science."
89,"Naive Bayes","Use Naive Bayes with scikit learn in python..Splitting data between training sets and testing sets with scikit learn..Calculate the posterior probability and the prior probability of simple distributions."
89,"Support Vector Machines","Learn the simple intuition behind Support Vector Machines..Implement an SVM classifier in SKLearn/scikit-learn..Identify how to choose the right kernel for your SVM and learn about RBF and Linear Kernels."
89,"Decision Trees","Code your own decision tree in python..Learn the formulas for entropy and information gain and how to calculate them..Implement a mini project where you identify the authors in a body of emails using a decision tree in Python."
89,"Choose your own Algorithm","Decide how to pick the right Machine Learning Algorithm among K-Means, Adaboost, and Decision Trees."
89,"Datasets and Questions","Apply your Machine Learning knowledge by looking for patterns in the Enron Email Dataset..You'll be investigating one of the biggest frauds in American history!"
89,"Regressions","Understand how continuous supervised learning is different from discrete learning..Code a Linear Regression in Python with scikit-learn..Understand different error metrics such as SSE, and R Squared in the context of Linear Regressions."
89,"Outliers","Remove outliers to improve the quality of your linear regression predictions..Apply your learning in a mini project where you remove the residuals on a real dataset and reimplement your regressor..Apply your same understanding of outliers and residuals on the Enron Email Corpus."
89,"Clustering","Identify the difference between Unsupervised Learning and Supervised Learning..Implement K-Means in Python and Scikit Learn to find the center of clusters..Apply your knowledge on the Enron Finance Data to find clusters in a real dataset."
89,"Feature Scaling","Understand how to preprocess data with feature scaling to improve your algorithms..Use a min mx scaler in sklearn."
90,"Big Data","What is Big Data?.The problems big data creates..How Apache Hadoop addresses these problems."
90,"HDFS and MapReduce","Discover how HDFS distributes data over multiple computers..Learn how MapReduce enables analyzing datasets in parallel across multiple machines."
90,"MapReduce code","Write your own MapReduce code."
90,"MapReduce Design Patterns","Use common patterns for MapReduce programs to analyze Udacity forum data."
91,"Lesson 1","Join instructor Karthik Ramasamy and the first Udacity-Twitter Storm Hackathon to cover the motivation and practice of real-time, distributed, fault-tolerant data processing.  Dive into basic Storm Topologies by linking to a real-time d3 Word Cloud Visualization using Redis, Flask, and d3."
91,"Lesson 2","Explore Storm basics by programming Bolts, linking Spouts, and finally connecting to the live Twitter API to process real-time tweets.  Explore open source components by connecting a Rolling Count Bolt to your topology to visualize Rolling Top Tweeted Words."
91,"Lesson 3","Go beyond Storm basics by exploring multi-language capabilities to download and parse real-time Tweeted URLs in Python using Beautiful Soup.  Integrate complex open source bolts to calculate Top-N words to visualize real-time Top-N Hashtags.  Finally, use stream grouping concepts to easily create streaming join to connect and dynamically process multiple streams."
91,"Lesson 4","Work on your final project and we cover additional questions and topics brought up by Hackathon participants.  Explore Vagrant, VirtualBox, Redis, Flask, and d3 further if you are interested!"
91,"Final Project: Construct a Storm Topology","Design a Storm Topology and new bolt that uses streaming joins to dynamically calculate Top-N Hashtags and display real-time tweets that contain trending Top Hashtags.  Post your visualization to the forum and tweet them to your Twitter followers."
91,"Project Extensions","Use additional features of the real-time Twitter sample stream or use any data source to drive your real-time d3 visualization."
92,"Data Analysis Process","Learn about the data analysis process..Pose a question, wrangle your data, draw conclusions and/or make predictions..Complete an analysis of Udacity student data using pure Python, with few additional libraries."
92,"NumPy and Pandas for 1D Data","Start learning to use NumPy and Pandas to make the data analysis process easier..Features that apply to one-dimensional data..Learn to use NumPy arrays, Pandas Series, and vectorized operations."
92,"NumPy and Pandas for 2D Data","Continue learning about NumPy and Pandas, this time focusing on two-dimensional data..Learn to use two-dimensional NumPy arrays and Pandas DataFrames..Group your data and to combine data from multiple files."
92," Investigate a Dataset","Use NumPy and Pandas to go through the data analysis process on one of a list of recommended datasets."
93,"Introduction to Data Science","Pi-Chaun (Data Scientist @ Google): What is Data Science?.Gabor (Data Scientist @ Twitter): What is Data Science?.Problems solved by data science."
93,"Data Wrangling","What is Data Wrangling?.Acquiring data..Common data formats."
93,"Data Analysis","Statistical rigor..Kurt (Data Scientist @ Twitter) - Why is Stats Useful?.Introduction to normal distribution."
93,"Data Visualization","Effective information visualization..An analysis of Napoleon's invasion of Russia!.Don (Principal Data Scientist @ AT&T): Communicating Findings."
93,"MapReduce","Introduction to Big Data and MapReduce..Learn the basics of MapReduce..Mapper."
94,"How the Web Works","Learn basic concepts regarding the internet, browsers, and HTML..Start using HTML (HyperText Markup Language) to format content for webpages..HyperText Transfer Protocol (HTTP) via GET and POST requests."
94,"Forms and Input","Learn about forms, a very common way to obtain input from users..Learn how to get and process user input from webpages using Google App Engine."
94,"Databases",""
94,"User Accounts and Security",""
94,"APIs",""
94,"Caching",""
94,"Scaling Up",""
95,"Overview","Learn why accessibility matters, and who it affects..Get a first look at the web accessibility guidelines (WAI – Web Accessibility Initiative)..Understand “POUR” means for accessibility, and locate checklists to help make your own sites accessible."
95,"Focus","Learn how to make a page usable for anyone navigating with the keyboard..An exploration of focusable elements..Learn how to manage focus in forms, in custom components, pop-ups, and off-screen content."
95,"Semantics Basics","Make a page work for people who are unable to use a standard user interface..Use a screen reader to try out ordinary form elements and add markup to make them work even better..Understand the accessibility tree the browser constructs from the DOM."
95,"Semantics Extras","Dive deeper into the screen-reader experience to add hyper-fast navigation..Learn how to arrange headings and label links so screen reader users can fly through your pages!.Call out “landmarks” into your page to speed up navigation even more."
95,"Semantics - ARIA","Move beyond the native elements of HTML into building custom controls and interactions..Accessible Rich Internet Applications (ARIA)..Learn how to add attributes to your custom interactions to make them as accessible as native elements."
95,"Style","Learn the third pillar of Accessibility (after Focus and Semantics): Styling..Highlight the focus, indicate ARIA states, zoomed in or out, and support limited color or contrast vision..Audit your page with the Chrome Accessibility Tools and correct any styling issues that pop up."
96,"Scopes and Closures","Learn about JavaScript’s variable scoping, including lexical scopes and dynamics scopes..Introduction to closures, an incredibly useful feature available in only a handful of languages."
96,"The Keyword “this”","Start your dive into JavaScript object-oriented features by discovering the parameter “this”..Learn how the value of “this” is determined within various code structures..Why it might be a lot easier to think of “this” as a parameter rather than a keyword."
96,"Prototype Delegation","Learn more about protype delegation..How JavaScript uses this feature internally..How you can take advantage of it to maximize your application’s memory footprint."
96,"Code Reuse","Start writing a library using basic functions and learn the decorator pattern..Refactor this library into the functional, prototypal and pseudoclassical inheritance models..Explore sub-classing - objects that inherit from objects previously defined."
97,"HTML5 Canvas Basics","Learn what the Canvas is and how it affects graphics in the browser..Learn how to make compositions with text and images with memes!.Practice using the API."
97,"From Pixels to Animation","Learn how images are stored by the Canvas2D context..Learn how to modify images by applying various effects and filters..Create your first animation!"
98,"The DOM, $ and Selectors","The jQuery object ($)..Review of the DOM structure..How to use selectors and filters."
98,"DOM Manipulation","How to read jQuery documentation..How to modify HTML attributes and content..How to add and remove DOM elements."
99,"Introduction","What is AJAX?.Why use an API?.How can you identify AJAX requests in existing websites?"
99,"Using APIs with AJAX","Clone the Move Planner repository..Implement the Google Streetview API..Implement the NY Times API."
99,"AJAX and Your Projects","What did you learn?.How else can you apply AJAX to make speedy page loads?.Customizing your sites."
100,"Fundamentals of AI","Statistics, Uncertainty, and Bayes networks..Machine learning..Logic and planning."
100,"Applications of AI","Image processing and computer vision..Robotics and robot motion planning..Natural language processing and information retrieval."
101,"What is EDA?","Start by learn about what exploratory data analysis (EDA) is and why it is important."
101,"R Basics","EDA, which comes before formal hypothesis testing and modeling, makes use of visual methods to analyze and summarize data sets..R will be our tool for generating those visuals and conducting analyses..We will install RStudio and packages, learn the layout and basic commands of R, practice writing basic R scripts, and inspect data sets."
101,"Explore One Variable","Perform EDA to understand the distribution of a variable and to check for anomalies and outliers..Learn how to quantify and visualize individual variables within a data set to make sense of a pseudo-data set of Facebook users..Create histograms and boxplots, transform variables, and examine tradeoffs in visualizations."
101,"Explore Two Variables","DA allows us to identify the most important variables and relationships within a data set before building predictive models..Learn techniques for exploring the relationship between any two variables in a data set..Create scatter plots, calculate correlations, and investigate conditional means."
101,"Explore Many Variables","Learn powerful methods and visualizations for examining relationships among multiple variables..Reshape data frames and how to use aesthetics like color and shape to uncover more information.Continue to build intuition around the Facebook data set and explore some new data sets as well."
101,"Diamonds and Price Predictions","Investigate the diamonds data set alongside Facebook Data Scientist, Solomon Messing..See how predictive modeling can allow us to determine a good price for a diamond..As a final project, you will create your own exploratory data analysis on a data set of your choice."
102,"What is User Experience?","UI vs UX..High level planning..Low-fi wireframing and prototyping."
102,"User-Centered Design","The perils of ignoring your user..How to create effective personas and use cases..Low cost user research."
102,"Designing for Mobile Constraints","The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens..The implications of these constraints and what happens when you get them wrong..Advanced wireframing."
102,"Designing for Android Delight","Android sensors..The importance of contextual apps..Android APIs (Google Play Services)."
104,"Scalability Basics","How and why server racks were invented..Problems that you have to solve if you scale your app by yourself..Learn about a better way."
104,"Getting Started","Set up your first App Engine project and learn how to define Cloud Endpoints..Start the course project app - Conference Central and add authentication and user profiles."
104,"Storing and Retrieving Data","One of the most important things you want to do in your app is storing data..Learn about the Google App Engine Datastore and how you can use it in your applications..Add the ability to store and retrieve user profiles and conferences to the course project app."
104,"Advanced Datastore Concepts","Learn more about how Datastore works, including queries, filters, indexes and transactions..Add different ways to query conferences."
104,"Advanced App Engine Topics","Run application code in the background, without making the user wait, or even initiate the process..Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app..Memcache, Edge Caching, AppStats and other methods of optimising your apps performance."
104,"App Engine and Mobile Apps","Use Cloud Endpoints in a mobile app..Generate native libraries for Android and iOS that can talk to your backend..Recompile the Android app provided with the course, to work against your own project."
106,"Intro to Research Methods","Introduction to several statistical study methods..Learn the positives and negatives of each."
106,"Visualizing Data","Take your data and display it to the world..Create and interpret histograms, bar charts, and frequency plots."
106,"Central Tendency","Compute and interpret the 3 measures of center for distributions: the mean, median, and mode."
106,"Variability","Quantify the spread of data using the range and standard deviation..Identify outliers in data sets using the concept of the interquartile range."
106,"Standardizing","Convert distributions into the standard normal distribution using the Z-score..Compute proportions using standardized distributions."
106,"Normal Distribution","Use normalized distributions to compute probabilities.Use the Z-table to look up the proportions of observations above, below, or in between values"
106,"Sampling Distributions","Apply the concepts of probability and normalization to sample data sets."
107,"Estimation","Estimate population parameters from sample statistics using confidence intervals..Estimate the effect of a treatment."
107,"Hypothesis Testing","How to determine if a treatment has changed the value of a population parameter."
107,"t-tests","How to test the effect of a treatment..Compare the difference in means for two groups when there are small sample sizes."
107,"ANOVA","Learn how to test whether or not there are differences between three or more groups."
107,"Correlation","Learn how to describe and test the strength of a relationship between two variables."
107,"Regression","How changes in one variable are related to changes in a second variable."
107,"Chi-squared Tests","Learn how to compare and test frequencies for categorical data."
110,"Abstractions","Hardware Resources.OS Functionality.Managing the CPU and Memory"
110,"OS Structure","The SPIN Approach.The Exokernel Approach.The L3 Micro-Kernel Approach"
110,"Virtualization","Intro to Virtualization.Memory Virtualization.CPU and Device Virtualization"
110,"Parallelism","Shared Memory Machines.Synchronization.Communication"
110,"Distributed Systems","Definitions.Lamport Clocks.Latency limits"
110,"Distributed Object Technology","Spring Operating System.Java RMI.Enterprise Java Beans"
110,"Design and Implementation of Distributed Services","Global Memory System.Distributed Shared Memory.Distributed File System"
110,"System Recovery","Lightweight Recoverable Virtual Memory.Rio Vista.Quicksilver"
110,"Internet Scale Computing","Giant Scale Services.MapReduce.Content Delivery Networks"
110,"Real-Time and Multimedia","Time sensitive Linux.Persistent temporal streams"
111,"Computability","Languages & Countability.Turing Machines.The Church-Turing Thesis"
111,"Complexity","P and NP.NP-Complete Problems.The Golden Ticket"
111,"Algorithms","Dynamic Programming.Fast Fourier Transform.Maximum Flow"
112,"Unit 1: Introduction to KBAI and Cognitive Systems.","Where Knowledge-Based AI fits into AI as a whole. Cognitive systems: what are they?. AI and cognition: how are they connected?"
112,"Unit 2: Fundamentals","Semantic Networks. Generate & Test. Means-Ends Analysis. Problem Reduction. Production Systems"
112,"Unit 3: Common Sense Reasoning","Frames. Understanding. Common Sense Reasoning. Scripts"
112,"Unit 4: Planning","Logic. Planning"
112,"Unit 5: Learning","Learning by Recording Cases. Incremental Concept Learning. Classification. Version Spaces & Discrimination Trees"
112,"Unit 6: Analogical Reasoning","Case-Based Reasoning. Explanation-Based Learning. Analogical Reasoning"
112,"Unit 7: Visuospatial Reasoning","Constraint Propagation. Visuospatial Reasoning"
112,"Unit 8: Design & Creativity","Configuration. Diagnosis. Design. Creativity"
112,"Unit 9: Metacognition","Learning by Correcting Mistakes. Meta-Reasoning. AI Ethics"
114,"Lesson 1: Introduction and Trends","Computer Architecture & Tech Trends. Moore's Law. Processor Speed, Cost, Power. Power Consumption. Fabrication Yield"
114,"Lesson 2: Performance Metrics and Evaluation","Measuring Performance. Benchmarks Standards. Iron Law of Performance. Amdahl's Law. Lhadma's Law"
114,"Lesson 3: Pipelining Review","Pipeline CPI. Processor Pipeline Stalls. Data Dependencies. Pipelining Outro"
114,"Lesson 4: Branches","Branch Prediction. Direction Predictor. Hierarchical Predictors. PShare"
114,"Lesson 5: Predication","If Conversion. Conditional Move. MOVc Summary"
114,"Lesson 6: Instruction Level Parallelism (ILP)","ILP Intro. RAW Dependencies. WAW Dependencies. Duplicating Register Values. Instruction Level Parallelism (ILP)"
114,"Lesson 7: Instruction Scheduling","Improving IPC. Tomasulo's Algorithm. Load and Store Instructions"
114,"Lesson 8: ReOrder Buffer","Exceptions in Out Of Order Execution. Branch Misprediction. Hardware Organization with ROB"
114,"Lesson 9: Memory Ordering","Memory Access Ordering. When Does Memory Write Happen. Out of Order Load Store Execution. Store to Load Forwarding. LSQ, ROB, and RS"
114,"Lesson 9: Memory","How Memory Works. One Memory Bit SRAM. One Memory Bit DRAM. Fast Page Mode. Connecting DRAM To The Processor"
114,"Lesson 10: Multi-Processing","Flynn's Taxonomy of Parallel Machines. Multiprocessor Needs Parallel Programs!. Centralized Shared Memory. Distributed Shared Memory. Message Passing Vs Shared Memory. Shared Memory Hardware. SMT Hardware Changes. SMT and Cache Performance"
116,"Lesson 1: The US Healthcare System","This lesson will discuss unique and the complex nature of the US healthcare system: its key problems, the specific challenges presented by chronic disease, the major disconnect between the health system’s capabilities and the demands of chronic disease management, and the hope that a combination of new incentives, health IT adoption, and new models of care can bridge this disconnect leading to a more efficient, effective, safer and more patient-centered US system of care."
116,"Lesson 2: Federal Policies & Initiatives","This lesson will focus on the important details of the specific programs that the federal government has put into place to spur health IT adoption by eligible providers and hospitals as well as the role played by financial incentives that reward performance, rather than the quantity of procedures."
116,"Lesson 3: Health Information Exchange","This lesson will focus on the rationale for and the major challenges of health information exchange (HIE). We will discuss the various ways of classifying HIE, how to differentiate the various HIE architectures, and the Indiana Health Information Exchange as a premier example including descriptions of its key services. We will discuss new approaches and technologies with a particular emphasis on Direct HIE, a new technology based on secure email and encrypted attachments."
116,"Lesson 4: Privacy, Security and Trust","This lesson focuses on the keys issues of privacy, security, and trust in a world of digital records and health information exchange. Students will understand the key role that patient engagement plays in chronic disease prevention and management and the concerns patients have about sharing their health data. They will also explore the various privacy consent models. Data segmentation will be discussed as a key challenge for obtaining patient consent under what may be the most acceptable model. The concept of public key infrastructure (PKI) including the roles of the public key, private key, registration authority and certificate authority will be covered."
116,"Lesson 5A: Data Standards","We divide the discussion of standards into those for health data and those for achieving its sharing by fostering interoperability. This lesson  focuses on data standards after reviewing the rationale for standards and the evolutions that have been taking place in their use, technology and structure. Students will be able to recognize the difference between a classification and an ontology.  They will be familiar with the key data standards (including ICD, CPT, LOINC and SNOMED). They will also gain an overview of the differences between standards based on EDI/X12 and XML."
116,"Lesson 5B: Interoperability Standards","This lesson builds on Lesson 5A on data standards to show how these data are transmitted within messages using HL7 and packaged into CCDA-based clinical documents for sharing via HIE. We’ll briefly introduce even more advanced standards with a particular emphasis on clinical decision support (CDS, an important technology for the future) and the key elements of and remaining challenges with standards to support CDS. We’ll also discuss more facile next generation approaches based on web technologies and approaches."
116,"Lesson 6: Clinical Data Collection and Visualization Challenges","Students should understand the key roles that data plays in medical practice and the root causes of common data quality issues in general and the specific root causes of data quality issues with respect to electronic health records. They should understand the high level challenges of efficiently and accurately collecting high quality, comprehensive clinical data from physicians and of visualizing digital health data in a way that supports the provider’s mental model. They should understand the key roles that information technology plays in the future vision of healthcare."
116,"Lesson 7: Empowering the Patient","Students should understand the key role that support for patients can play so they can achieve behavior change, adhere to their prescribed treatments and generate data to help their providers more continuously manage their chronic diseases. They should understand patient interests. They should understand the key information technology tools now available to patients including patient health records, portals, social networking, in home technologies and mobile devices and sensors. They should have a detailed functional understanding of personal health records and their potential as app platforms. They should understand the potential role of social networking in patient education and care management. They should understand the various telemedicine modalities being developed and offered for use by patients at home."
116,"Lesson 8: Population Health Management","Students should understand the difference between individual patient management, population management and public health. They should understand the technologies for aggregating data, the kinds of data that are collected and the kinds of reports that are required for population and public health management."
116,"Lesson 9: Data Query in a Federated Environment","Students should understand the challenges of data query and aggregation in an environment where care providers are using disparate and non-interoperable EHRs. They should be familiar with and understand the differences among the distributed query technologies. They should be familiar with the distributed query standards and the various open source query frameworks reviewed in this lesson."
116,"Lesson 10: Big Data Meets Healthcare","Students should understand the concept of “big data”; the common technical approaches to modeling and simulation and the common applications of each. They should be familiar with the specific case studies of analytic applications to healthcare problems as diverse as improved clinical decision support, understanding clinical processes, modeling care spaces and providing optimal patient-specific treatments."
118,"Lesson 1: Introduction","Computer Networking Overview. What This Class is Not About"
118,"Lesson 2: Architecture & Principles","  A Brief History of the Internet.   Architectural Design Principles.   Packet Switching.   File Transfer.   End to End Argument Violations"
118,"Lesson 3: Switching","  Switching and Bridging.   Bootstrapping: Networking Two Hosts.   ARP: Address Resolution Protocol.   Interconnecting LANs with Hubs.   Switches: Traffic Isolation.   Spanning Tree.   Switches vs. Routers.   Buffer Sizing for a TCP Sender"
118,"Lesson 4: Routing","  Internet Routing.   Intra-AS Topology.   Distance-Vector Routing.   Link State Routing.   Interdomain Routing.   IGP vs. iBGP.   BGP Route Selection.   Multiple Exit Discriminator (MEI).   Interdomain Routing Business Models"
118,"Lesson 5: Naming, Addressing & Forwarding","  IP Addressing.   Pre-1994: “Classful” Addressing.   IP Address Allocation.   Classless Interdomain Routing (CIDR).   Multihoming Frustrates Aggregation.   Address Lookup Using Tries.   Memory Efficiency and Fast Lookup.   Alternatives to LPM with Tries.   NAT and IPv6.   Network Address Translation (NAT)"
118,"Lesson 5.1: Router Design Basics","  Router Design.   Basic Router Architecture.   Decision: Crossbar Switching.   Switching Algorithm: Maximal Matching.   Head of Line Blocking.   Scheduling and Fairness.   Max-Min Fairness"
118,"Lesson 5.2: Domain Name System (DNS)","  Record Types.   Examples (using “dig”).   Lookup IP Address"
118,"Lesson 6: Congestion Control & Streaming","  Congestion Control.   AIMD (TCP Congestion Control).   Data Centers & TCP “Incast”.   Barrier Synchronization & Idle Time.   Multimedia & Streaming.   Digitizing Audio & Video.   Streaming Video.   Skype"
118,"Lesson 7: Rate Limiting and Traffic Shaping","  Traffic Classification & Shaping.   Source Classification.   Leaky Bucket Traffic Shaping.   (r, t) Traffic Shaping.   Shaping Bursty Traffic Patterns.   Power Boost.   Effects on Latency.   Buffer Bloat.   Packet Monitoring"
118,"Lesson 8: Content Distribution","  The Web and Caching.   HTTP Requests.   Persistent Connections.   Content Distribution Networks (CDNs).   Server Selection.   Content Routing.   Bit Torrent.   Solution to Freeriding: “Choking”.   Distributed Hash Tables.   Consistent Hashing"
118,"Lesson 9: Software Defined Networking","  Network Management Overview.   Software Defined Networking (SDN).   Control and Data Planes.   Different SDN Controllers.   NOX: Overview.   Ryu, Floodlight, Nox and Pox.   Customizing Control"
118,"Lesson 10: Traffic Engineering","  Traffic Engineering Overview.   Interdomain Traffic Engineering.   Measuring, Modeling and Controlling Traffic.   Link Utilization Function.   BGP in Interdomain Traffic Engineering.   Multipath Routing.   Data Center Networking.   Valiant Load Balance.   Jellyfish Data Center Topology"
118,"Lesson 11: Network Security","  Internet is Insecure.   Resource Exhaustion.   Routing Security.   Origin and Path Authentication.   DNS Security.   DNS Cache Poisoning"
118,"Lesson 11.1: Internet Worms","  Viruses and Internet Worms.   Internet Worm Lifecyle.   First Worm: “Morris” Worm.   Worm Outbreaks in Detail.   Modeling Fast-Spreading Worms"
118,"Lesson 11.2: Spam","  Spam.   IP Blacklisting"
118,"Lesson 11.3: Denial of Service (DoS) Attacks","  TCP 3-Way Handshake.   Inferring Denial of Service Activity using Backscatter.   Automated DoS Attack Mitigation.   MTPCP"
119," Introduction","What is Computational Photography?.Dual Photography.Panorama"
119,"Digital Imaging","Point Processes, Smoothing.Blending Modes, Convolution and Cross-Correlation.Gradients and Edges"
119,"Cameras","Lenses.Exposure.Sensor"
119,"Comp Vision to Comp Photo","Fourier Transform.Blending.Pyramids"
119,"Applications","Panorama.HDR.Time Lapse"
119,"Light Field","Lightfield.Lightfield Camera"
119,"Blue / De-Blur","Lucy-Richardon Blur.Flutter Shutter"
119,"Video","Video.Video Textures.Video Stabilization"
119,"Closing Thoughts",""
120,"Lesson 1: Introduction and Overview","Importance of Software Engineering. Discipline of Software Engineering. The Software Crisis. Software Phases"
120,"Lesson 2: Life Cycle Models","Introduction with Barry Bohem. Requirements Engineering. Design. Maintenance. Software Process Model Introduction. Waterfall Process. Spiral Process. Evolutionary Prototyping Process. Rational Unified Process. Agile Process. Choosing a Model. Lifecycle Documents"
120,"Lesson 3: Integrated Development Environment","Eclipse Introduction. IDE Overview. Plug-Ins. Eclipse Demo: Create Java Project. Eclipse Demo: Create a Class. Eclipse Demo: Run Configuration. Eclipse Demo: Debugging"
120,"Lesson 4: Version Control Systems","Interview with John Britton. Version Control System Introduction. Two Main Types of VCS. Introduction to Git. Git Workflow. Git Demo: Intro to Git. Git Demo: Git + Eclipse. Git Demo: Github. Git Recap: Local Repositories. Git Recap: Remote Repositories"
120,"Lesson 5: Requirements Engineering","Interview with Jane Cleland-Huang. General RE Definition. Software Intensive Systems. Functional and Nonfunctional Requirements. User and System Requirements. Modeling Requirements. Analyzing Requirements. Requirements Prioritization. Requirements Engineering Process"
120,"Lesson 6: OO Software and UML","Object Orientation Introduction. UML Structural Diagrams: Class Diagrams. Class Diagram: Creation Tips. UML Structural Diagrams: Component Diagram. UML Structural Diagram: Deployment Diagram. UML Behavioral Diagram: Use Case. Use Case Diagram: Creation Tips. UML Behavioral Diagrams: Sequence. UML Behavioral Diagrams: State Transition Diagram"
120,"Lesson 7: Software Architecture","Interview with Nenad Medvidovic. What is Software Architecture?. Prescriptive vs. Descriptive Architecture. Architectural Evolution. Architectural Degradation. Architectural Recovery. Architectural Elements. Components, Connectors, and Configuration. Deployment Architectural Perspective"
120,"Lesson 8: A Tale of Analysis and Design","Analyzing Requirements. Refining Classes and Attributes. Adding Attributes. Identifying Operations. Refining the Class Diagram"
120,"Lesson 9: Design Patterns","Patterns Catalogue. Pattern Format. Factory Method Pattern. Strategy Pattern. Choosing a Pattern. Negative Design Patterns"
120,"Lesson 10: Unified Software Process","Use-Case Driven. Inception Phase. Elaboration Phase. Construction Phase. Transition Phase. Phases and Iterations"
120,"Lesson 11: General Concepts","Failure, Fault and Error. Verification Approaches. Pros and Cons of Approaches. Testing Introduction. Testing Granularity Levels. Alpha and Beta Testing. Black and White Box Testing Introduction"
120,"Lesson 12: Black-Box Testing","Systematic Functional Testing Approach. Test Data Selection. Category Partition Method. Produce and Evaluate Test Case Specifications. Generate Test Cases from Test Case Specifications. Model Based Testing. Finite State Machines"
120,"Lesson 13: White-Box Testing","Coverage Criteria Intro. Statement Coverage. Control Flow Graphs. Test Criteria Subsumption. MC/DC Coverage"
120,"Lesson 14: Agile Development Methods","Cost of Change. Agile Software Development. Extreme Programming (XP). XP’s Values and Principles. Test First Development. Refactoring. Pair Programming. Continuous Integration. Testing Strategy. High Level Scrum Process"
120,"Lesson 15: Software Refactoring","Reasons to Refactor. Refactoring Demo. Refactoring Risks. Cost of Refactoring. When Not to Refactor"
121,"Introduction","Introduction.Browser Exercise (Analysis).Design Concepts"
121,"UML and Analysis","Review of UML.Object Oriented Analysis Exercise.UML Class Models"
121,"Software Architecture","KWIC Exercise.Overview of Software Architecture.Architectural Views"
121,"Software Design","Components.Coffee Maker Exercise.Object Design"
126,"Vectors","Learn the basic operations on vectors (one of the fundamental objects of study in linear algebra)..Code a library of functions to perform operations on vectors that you will use in later lessons."
126,"Intersections","Learn the geometric and algebraic interpretation of intersections of "flat" objects and how to solve real-world problems..Write your own algorithm to find the intersections of sets of lines and planes."
127,"Data Extraction Fundamentals","Assessing the Quality of Data.Intro to Tabular Formats.Parsing CSV"
127,"Data in More Complex Formats","XML Design Principles.Parsing XML.Web Scraping"
127,"Data Quality","Sources of Dirty Data.A Blueprint for Cleaning.Auditing Data"
127,"Working with MongoDB","Data Modelling in MongoDB.Introduction to PyMongo.Field Queries"
127,"Analyzing Data","Examples of Aggregation Framework.The Aggregation Pipeline.Aggregation Operators: $match, $project, $unwind, $group"
127,"Case Study - OpenStreetMap Data","Using iterative parsing for large datafiles.
Open Street Map XML Overview.Exercises around OpenStreetMap data"
128,"Introduction to the QMV Process","Learn about the Question, Modeling, and Validation (QMV) process of data analysis..Understand the basics behind each step.. Apply the QMV process to analyze on how Udacity employees choose candies!"
128,"Question Phase","Learn how to turn a vague question into a statistical one that can be analyzed with statistics and machine learning..Analyze a Twitter dataset and try to predict when a person will tweet next!"
128,"Modeling Phase","Build rigorous mathematical, statistical, and machine learning models to make accurate predictions..Look through the recently released U.S. medicare dataset for anomalous transactions."
128,"Validation Phase","Learn fundamental metrics to grade the performance of your models...Analyze the AT&T connected cars data set..See if you can tell the drivers apart by analyzing their driving patterns."
128,"Identify Hacking Attempts from Network Flow Logs","Create a program that examines log data and scores the likelihood that a brute force attack is taking place on a server."
129,"From Machine Learning to Deep Learning","Understand the historical context and motivation for Deep Learning..Set up a basic supervised classification task and train a black box classifier on it..Train a logistic classifier “by hand”, and using gradient descent (and stochastic gradient descent)."
129,"Deep Neural Networks","Train a simple deep network: Relus, the chain rule, and backpropagation..Effectively regularize a simple deep network. L2 regularization, and dropout..Train a competitive deep network via model exploration and hyperparameter tuning."
129,"Convolutional Neural Networks","Train a simple convolutional neural net..Explore the design space for convolutional nets."
129,"Deep Models for Text and Sequences","Train a text embedding model using models like Word2Vec. Reduce the dimensionality of the space using tSNE..Train a LSTM model, and regularize it."
130,"Affordances and Signifiers","Discover the various affordance you must account for when designing..Learn about signifiers and how to improve the utility of your designs."
130,"Conceptual Models and the System Image","Use conceptual models to improve your designs..Learn how to design something so your users can develop their own conceptual model."
130,"Gulfs of Evaluation and Execution","Discover what you are allowed to do, using the Gulf of Evaluation..Get feedback on your designs with the Gulf of Execution."
130,"Design the User Interface  for a Timebank","Combine everything you have learned in this course to design the user interface for a Timebank..Sketch a concept of your design..Conduct user testing to improve upon your design."
131,"Introduction","A high-level overview of the course and what to expect in it..What we mean by mobile web development, and why you should care about it."
131,"Mobile Development Tools","How to use the Chrome Developer Tools to develop for the mobile web."
131,"Mobile UX and Viewport","How to achieve a smooth user experience on mobile..An introduction to the viewport."
131,"Fluid Design","How to make your site responsive, clean, and user-friendly on multiple devices and layouts."
131,"Media Queries","How to achieve different layouts for different devices using media queries."
131,"Responsive Images","How best to integrate media into your mobile web applications..Adaptively scale images based on the environment."
131,"Optimizing Performance","Optimizing performance to improve the user experience..Network, cpu, rendering, and battery."
131,"Touch","UX concerns with touch-based interaction..How to design user interactions that work across devices."
131,"Input","Semantic input for form data, and other user input options on mobile."
131,"Device Access","Learn about camera access, geolocation, and other sensors and feedback you have access to on mobile."
132,"Introduction","Intro to Chrome Developer Tools..How to measure the performance of mobile and desktop websites."
132,"Critical Rendering Path","How are browsers and websites built..HTML, CSS and JavaScript and the conversions to DOM and CSSOM..Measuring performance via the Timeline view in Chrome Developer Tools."
132,"Easy HTML, CSS and JavaScript optimizations.","Adding powerful attributes to HTML tags..Diagnose opportunities for optimization..Key metrics to triangulate potential performance bottlenecks."
133,"Exploring the HTML and CSS","Create our own version of 2048 by making changes to the existing HTML and CSS files..Within 10 minutes, you'll have your own game..Within an hour, your friends will be playing your 2048 game."
134,"Introduction to Canvas rendering","Explains the basics of the canvas element as well as image formats."
134,"Atlases","How can the canvas be manipulated to handle a lot of graphics at once..Atlases versus Spritesheets.How to find the true boundaries of an image with frame trimming."
134,"Map rendering","Shooting robots: Drawing the map..Tiled map data and deep dive into map data."
134,"Basic Input, handling events","Capturing user input..Event listeners and keyboard input..Keyboard firing and mouse firing."
134,"The entity hierarchy","Building an entity..Order of operations."
134,"Box2D, and using external libraries","Pixel perfect collision..How to use Box2D."
134,"Adding sound","Getting sounds into your game..Sound and WebAudio."
134,"Asynchronous Loading","Asset loading and asset managers..Caching images..GRITS loading."
135,"Perfect Ciphers","What makes certain ciphers perfect..How the Lorenz Cipher was broken."
135,"Symmetric Encryption","Sending messages when two people share a secret."
135,"Key Exchange","Techniques to establish a shared secret."
135,"Asymmetric Encryption","Exchanging information using public key cryptosystems."
135,"Public Key Protocols","Encrypted key exchange, certificates, secure commerce."
135,"Using Cryptographic Primitives","How cryptography can be useful for anonymizing communication, voting, and digital cash."
135,"Secure Computation","Computing without exposing data."
136,"Visualizing relationships in data","Seeing relationships in data..Making predictions based on data..Simpson's paradox."
136,"Probability","Introduction to Probability..Bayes Rule..Correlation vs. Causation."
136,"Estimation","Maximum Likelihood Estimation..Mean, Median, Mode..Standard Deviation and Variance."
136,"Outliers and Normal Distribution.","Outliers, Quartiles..Binomial Distribution..Manipulating Normal Distribution."
136,"Inference.","Confidence Intervals..Hypothesis Testing."
136,"Regression","Linear regression..Correlation."
136,"Final Exam",""
141,"A Social Network Magic Trick","Become familiar with algorithm analysis..Eulerian Path and Correctness of Na..Russian peasants algorithm and more."
141,"Growth Rates in Social Networks","Use mathematical tools to analyze how things are connected..Chain, ring and grid networks..Big Theta and more."
141,"Basic Graph Algorithms","Find the quickest route to Kevin Bacon..Properties of social networks..Clustering coefficient and more."
141,"It's Who You Know","Learn to keep track of your best friends using heaps..Degree centrality..Top K Via Partitioning and more."
141,"Strong and Weak Bonds","Work with social networks that have edge weights..Make a tree and strength of connections..Weighted social networks and more."
141,"Hardness of Network Problems","Explore what it means for a social network problem to be "harder" than other..Tetristan and Exponential Running Time.Degrees of hardness and more."
141,"Review and Application","Interview with Peter Winker (Professor, Dartmouth College) on names and boxes problem and puzzles and algorithms..Interview with Tina Eliassi-Rad (Professor, Rutgers University) on statistical measures in network and social networks in security and protests..Additional interviews with Andrew Goldberg (Microsoft Research), Vukosi Marivate (Rutgers University) and Duncan Watts (Microsoft)."
142,"Lesson 1: Introduction","Motivation and a trip down the graphics pipeline, laying out the fundamental processes"
142,"Lesson 2: Points, Vectors, and Meshes","The basics of 3D geometry definition"
142,"Lesson 3: Colors and Materials","Color representation, material computations, transparency"
142,"Lesson 4: Transforms","Translation, scale, rotate and how to properly combine all these"
142,"Lesson 5: Matrices","Transform representation and how to fully control these"
142,"Lesson 6: Lights","Directional and point light sources"
142,"Lesson 7: Cameras","How the camera is defined"
142,"Lesson 8: Textures and Reflections","Color and opacity textures, along with reflection and normal mapping"
142,"Lesson 9: Shader Programming","An introduction to programming vertex and pixel shaders"
142,"Lesson 10: Interaction and Animation","How to select and make objects move"
143,"String Patterns","Find and specify classes of strings using regular expressions..Learn how to escape problematic characters..Represent a Finite State Machine."
143,"Lexical Analysis","Breaking strings down into important words..Write your own lexer that can tokenize HTML  strings..Use regular expressions to parse, lex, and tokenize HTML and JavaScript."
143,"Grammars","How to specify and deconstruct valid sentences..Parsing grammars and discovering errors using regular expressions..Use generators to parse strings."
143,"Parsing","Turning sentences into trees..Discover malformed input..Set precedence to prioritize parsing of strings."
143,"Interpreting","Simulating programs..Write an HTML interpreter..Calling functions and interpreting function definitions."
143,"Building a Web Browser","Interpreting HTML and JavaScript.Build your own web browser..Optimize the performance of your web browser."
143,"Wrap-up","Use regular expressions to parse HTML and JavaScript.Write an HTML interpreter..Write a JavaScript interpreter."
144,"Winning Poker Hands","Steps of the design process and developing for clarity and generality..Arguments for program correctness and experimentation and simulation..Design tradeoffs; Simplicity and Clarity. Decomposition and composability."
144,"Back of the Envelope","Back of envelope calculations: When to use brute force and when to be clever..The Zebra puzzle: Generator expressions, Permutations and combinations..Cryptarithmetic; Recursive and wishful thinking; Longest palindrome substring algorithm."
144,"Regular Expressions, other languages and interpreters","Defining the language of regular expressions and Interpreting the language..Defining the set of strings matched by a regular expression.Other languages."
144,"Dealing with complexity through search","Search: finding your way with a flashlight or boat..Analyzing the efficiency of an algorithm..Recurrence relations and Matching data types with algorithms."
144,"Dealing with uncertainty through probability","Probability: the game of Pig..Maximizing expected utility to optimize strategy."
144,"Word Games","Managing complexity..Large sets of words..Appropriate data structures."
144,"Conclusion","Interviews and practice exam."
145,"Rescuing Apollo 13, Part 1","Introduction to the Forward Euler Method."
145,"Rescuing Apollo 13, Part 2","Comparing solvers, Heun's Method..Symplectic Euler Method."
145,"Analyzing the Spread of Diseases","Implicit methods and stiffness."
145,"There's Plenty of Fish in the Sea?","Stability, sensitivity, and optimization."
145,"Antilock Brake Systems","Friction, equilibria, and control theory."
145,"The Path of a Forest Fire","Partial differential equations and heat conduction."
145,"Advanced Applications of Numerical Methods","Chaos, software, and predictive capability."
146,"How Debuggers work","Theory: Scientific method and its application to debugging..Fun fact: First bug in the history of computer science..Practice: Building a simple tracer."
146,"Asserting Expectations","Theory: Assertions in testing and in debugging..Fun fact: The most expensive bug in history..Practice: Improving the tracer."
146,"Simplifying Failures","Theory: Strategy of simplifying failures. Binary search. Delta debugging principle..Fun fact: Mozilla bugathon..Practice: Building a delta debugger."
146,"Tracking Origins","Theory: Cause-effect chain. Deduction. Dependencies. Slices..Fun fact: Sherlock Holmes and Doctor Watson..Practice: Improving the delta debugger."
146,"Reproducing Failures","Theory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process..Fun fact: Mad laptop bug..Practice: Building a statistic debugging tool."
146,"Learning from Mistakes","Theory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes..Fun fact: Programmer with the most buggy code..Practice: Improving your tools and practicing on a real world bug database."
147,"Lesson 1: Challenging Problems","An introduction to tough problems and their analysis"
147,"Lesson 2: Understanding Hardness","What we mean when a problem is “hard” and the concept of NP-completeness"
147,"Lesson 3: Showing Hardness","Tools to let you recognize and prove that a problem is hard"
147,"Lesson 4: Intelligent Force","Smart techniques to solve problems that should – theoretically – be impossible to solve"
147,"Lesson 5: Sloppy Solutions","Gaining speed by accepting approximate solutions"
147,"Lesson 6: Poking Around","Why randomness can be of help – sometimes. An introduction to complexity classes."
147,"Lesson 7: Ultimate Limits","Problems that no computer can ever solve. In theory."
148,"Supervised Learning","Lesson 0: Machine Learning is the ROX. Lesson 1: Decision Trees. Lesson 2: Regression and Classification. Lesson 3: Neural Networks. Lesson 4: Instance-Based Learning. Lesson 5: Ensemble B&B. Lesson 6: Kernel Methods and Support Vector Machines (SVM)s. Lesson 7: Computational Learning Theory. Lesson 8: VC Dimensions. Lesson 9: Bayesian Learning. Lesson 10: Bayesian Inference"
148,"Unsupervised Learning","Lesson 1: Randomized optimization. Lesson 2: Clustering. Lesson 3: Feature Selection. Lesson 4: Feature Transformation. Lesson 5: Information Theory"
148,"Reinforcement Learning","Lesson 1: Markov Decision Processes. Lesson 2: Reinforcement Learning. Lesson 3: Game Theory. Lesson 4: Game Theory, Continued"
149,"Lesson 1: How can we measure the circumference of the Earth?","Basics of geometry and trigonometry"
149,"Lesson 2: How do objects move?","Data analysis and kinematics"
149,"Lesson 3: What causes motion?","Forces, acceleration, and Newton’s Laws"
149,"Lesson 4: How can we use motion?","Work, energy, and simple machines"
149,"Lesson 5: How can we determine our longitude at sea?","Simple harmonic motion"
149,"Lesson 6: What is electricity?","Charge and electric fields"
149,"Lesson 7: What is left to discover?","Modern physics and open questions"
150,"Introduction to traits and heredity","Trait variation and categorization..Basic models of inheritance..The connection via DNA."
150,"Defining the genome","DNA structure and chromosomes..The genome organization."
150,"How a genome works","Protein coding genes, transcription, translation..Discerning the genetic code and alleles."
150,"Gene regulation","Non-coding DNA and regulatory regions of genes..Transcription factors."
150,"Transmission of genes and traits","Family relationships and pedigrees..Inheritance patterns, allele dominance..Chromosome dynamics."
150,"Origin of mutation/variation","Types of mutations and various causes of mutation..Allelic frequency, and the spread of alleles in a population."
150,"How to obtain and interpret personal genetic information","Personalized genetics: sample acquisition, DNA extraction and processing..Interpretation of results."
150,"Simple genetic traits","Molecular causes of monogenic traits..Loss-of-function vs. gain-of-function alleles, and dominance."
150,"Multifactorial traits","Polygenic traits,  qualitative and quantitative measures..Twin studies, relative risk, and genome-wide association studies (GWAS)."
150,"Pharmacogenetics: genes and drugs","Pharmacokinetics and pharmacodynamics..Alleles affecting drug metabolism..Personalized medicine."
151,"Introduction to Psychology","Practice versus research..Industrial and organizational psychology..Forensic psychology."
151,"Research Methods","Sex chores correlation and correlation coefficients..Beach correlation study..High fives study."
151,"The biology of behavior","Introducing Matt Sputnik and genetics..Timeline of humans and human evolution..Genetic code and dominance complexity."
151,"Sensation and Perception","Weight difference threshold..Mechanoreceptors and the Golden brain ceremony..Nearsightedness and the eye and the Odins eye theory."
151,"Psychological development","Nature vs nurture..Developmental stages and domains..Prenatal exposure."
151,"Consciousness","Coma and consciousness, and attention..Meditation..The function of sleep, sleep apnea and Insomnia."
151,"Depressants, Hallucinogens and Opioids","Barbituates and benzodiazapines, alcohol and other depressants..Heroin and other opioids, cannabis, marijuana effects..Psilocybin for terminal illness, MDMA for PTSD."
151,"Memory","H.M. or Henry Molaison, removal of the hippocampi..Sensory memory, central executive..Introduction to long-term memory."
151,"And much more...","Language, intelligence, motivation and emotion..Stress and health, personality..Social behavior, psychological disorders."
152,"Welcome","Welcome messages from Dr. David Joyner and Eboni Bell"
152,"Oscar & Registration","Accessing Oscar, Time Tickets & holds, Classing (finding, adding, dropping) waitlists, and grades"
152,"T-square","Accessing T-square, settings and tools, assessments (assignments, quizzes and tests) and grade book, and links (Piazza and Udacity)"
152,"Udacity","Accessing course materials, courses, form exercises, and programming exercises"
152,"Piazza","Getting started, profile, reading lists and topics, navigation, and posting"
152,"Other tools","Passport, ProctorTrack, Google+, Peer Feedback, Webex, and other resources"
152,"Tips","Courses, community, and welcome!"
154,"Objective-C and Swift, Compare and Contrast","Learn the distinguishing language features of Objective-C..Compare and contrast Objective-C and Swift language features..Practice answering interview questions about language features."
154,"Writing Classes","Familiarize yourself with Objective-C syntax..Write some classes and properties from scratch..Build a simple Objective-C program with classes."
154,"Adding Functionality to a Class: Methods and Messages","Master how to write and call methods in Objective-C..Learn basic control flow syntax..Build a functioning rock, paper, scissors game."
154,"Migrate an App from Objective-C to Swift: Part I","Learn how to write custom classes..Incorporate third party frameworks and extensions..Begin porting an existing Objective-C project into Swift."
154,"Migrate an App from Objective-C to Swift: Part II","Persist data with NSCoder and NSKeyedArchiver..Implement navigation with a collection view..Finish porting an existing Objective-C project into Swift."
154,"Common Interoperability Challenges","Facilitate communication between the languages of iOS..Add functionality to a mixed language project..Complete a set of coding challenges to sharpen interop skills."
155,"Lesson 1:","Use your knowledge of web fundamentals and request/response cycle to run your first Sinatra application."
155,"Lesson 2:","Create your own Sinatra application and define your first custom Sinatra route handlers."
155,"Lesson 3:","Create a Sinatra app that responds with HTML content. Define dynamic templates using the templating language ERB."
156,"The MVC Design Pattern with Ruby","Learn about the challenges of developing a website with disorganized code..Learn about how design patterns like MVC..Use your knowledge to organize the code using the MVC design pattern."
157,"Deployment in a Flash","Deploy your very first web application with Heroku..Learn the basics of deployment..See how to make your application public on the internet."
157,"Common Functionality","Learn the underlying mechanics of how web servers work..Identify common challenges when working with a deployed application..Set up a database, read logs, and activate a permanent file upload feature."
158,"Time Series Fundamentals","Learn what attributes make data a time series..Get introduced to a variety of simple forecasting methods..Learn about seasonality, trends, and cyclical patterns."
158,"ETS Models","Learn how to build and use ETS models..Use decomposition plots to visualize time series data..Get practice building an ETS model in Alteryx."
158,"ARIMA Models","Learn how to build and use ARIMA models..Learn the techniques used in seasonal and non-seasonal ARIMAs..Get practice building an ARIMA model in Alteryx."
158,"Analyzing and Visualizing Results","Learn how to interpret time series model results..Learn how to use holdout samples to compare forecasting models..Visualize your forecasts through various plots."
159,"A/B Testing Fundamentals","Learn how to select control and treatment units and variables for A/B tests..Select the correct experiment design for an A/B test."
159,"Randomized Design Tests","Learn how to select the unit of diversion and duration for a randomized test..Select variables for a randomized experiment..Be able to interpret randomized design experiment results."
159,"Matched Pair Design Tests","Learn how to match control units to treatment units..Determine the duration of the test..Interpret matched pair design experiment results."
159,"Matched Pair Practice","Go through an end to end example of a matched pair A/B test..Get step by step instruction to set up and analyze the test..Use trends to match target and control units."
160,"Segmentation and Clustering Fundamentals","Learn the difference between standardization and localization..Learn about the concept of distance in clustering models..Get introduced to how segmentation is used in business."
160,"Data Preparation for Clustering Models","Learn how to select data for clustering models..Learn what data types can be used in clustering models..Scale and transform data for clustering models."
160,"Variable Reduction","Learn the difference between factor analysis and principle components analysis..Learn to use principal components analysis to reduce the number of variables in a model."
160,"Clustering models design","Learn the difference between k-centroid and hierarchical clustering models..Be able to select the number of clusters for a k-centroid model..Validate your clusters in Alteryx."
160,"Lesson 5 – Building a Clustering Model","Build a k-centroid clustering model to segment retail stores..Learn how to visualize and validate your clusters..Be able to interpret the results and communicate the “story” of the analysis."
161,"Data Visualization Fundamentals","Learn why visualization is so important in analytics..Learn about exploratory versus explanatory visualizations..Get introduced to data types and ways to encode data."
161,"Design Principles","Use chart type, color, size, and shape to get the most out of data visualizations..Learn about the importance of limiting the amount of data presented in an analysis..Learn to use data with integrity."
161,"Creating Visualizations with Tableau","Do basic functions in Tableau, like inputting data and building charts..Learn to use colors, shapes, and other tools to dig deep into data..Learn to use calculations to create new data columns."
161,"Telling Stories with Tableau","Build Tableau dashboards..Create visualizations to tell stories with data."
164,"Making an App Interactive","Harness the power of Java to create an interactive coffee ordering app!.Start by writing simple Java code statements that add interactivity to your app..Use a fundamental concept in programming, a variable, to keep track of all the coffee drinks ordered."
164,"Work with the Android Framework and Control Flow","Take a deeper dive into the Android Framework and build the Just Java coffee ordering app!.See in more detail how Android works behind the scenes and take your first steps towards learning Object Oriented Programming..Add the ability to add toppings to your coffee, and show a detailed order summary when the customer purchases a coffee."
165,"Saturday","Why Choose Firebase.Creating a Firebase Project.Reading and Writing using Firebase Realtime Database and Authentication"
165,"Sunday Funday","Storing Data.Leveraging Analytics to Improve User Engagement.Notifications and Remote Config"
166,"Saturday","Why Choose Firebase.Creating a Firebase Project.Reading and Writing using Firebase Realtime Database and Authentication"
166,"Sunday Funday","Storing Data, Notifications, Remote Config.Leveraging Analytics to Improve User Engagement.Notifications and Remote Config"
